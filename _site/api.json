{
    "website_title": "Hisfantor's Blog",
    "website_url": "http://0.0.0.0:4000/",
    "posts": [
        
            {
                "title": "Pihole",
                "content_text": "prepare the pi  download the rpi-imager from the raspberrypi website  write rasbian lite to your sd-card(at least 4Gb)on windows  Control Panel &gt; Programs &gt; Turn Windows Features On Or Off. Enable the “Windows Subsystem for Linux”  install ubuntu from the microsoft store  start “Ubuntu” let it install and set your password(I’d recommand the same as you’ll use on your pi) and username  sudo apt update &amp;&amp; sudo apt upgrade -y  mount the SD card to enable SSH:    sudo mkdir /mnt/dsudo mount -t drvfs D: /mnt/dcd /mnt/d      the rest via Linux  create an “ssh” file (no extension) under the boot partition:  vi ssh      type :wq and hit enter    now you can put the SD in your pi, connect ethernet(CAT5.e recommandet) and finnaly plug in power  after boot use ssh pi@raspberrypi.local  password: raspberry  use ifconfig to see the PI’s mac adress  set static ip via your router      reboot pi    ssh pi@&lt;your ip&gt;  optional sudo raspi-config to change your password  sudo apt update &amp;&amp; sudo apt upgrade -y  now the actuall install:  curl -sSL https://install.pi-hole.net | bash  keep all of the preset preferences  take a screenshot of the finish page with the ip and your password to the analytics  type exit hit enter, to get out of the ssh connectionset the new DNS Serverubuntusudo vi /etc/netplan/01-netcfg.yamlandroidwindowscheck statisticshttp://192.168.0.30/admin/index.phpSouces:https://www.howtogeek.com/249966/how-to-install-and-use-the-linux-bash-shell-on-windows-10/https://superuser.com/questions/1114341/windows-10-ubuntu-bash-shell-how-do-i-mount-other-windows-driveshttps://linustechtips.com/main/topic/1094810-pi-hole-setup-tutorial/",
                "content_html": "<h3 id=\"prepare-the-pi\">prepare the pi</h3><ul>  <li>download the rpi-imager from <a href=\"https://www.raspberrypi.org/downloads/\">the raspberrypi website</a></li>  <li>write rasbian lite to your sd-card(at least 4Gb)</li></ul><h4 id=\"on-windows\">on windows</h4><ul>  <li>Control Panel &gt; Programs &gt; Turn Windows Features On Or Off. Enable the “Windows Subsystem for Linux”</li></ul><p><img src=\"\" alt=\"windows settings\" /></p><ul>  <li>install ubuntu from the microsoft store</li></ul><p><img src=\"\" alt=\"microsoft store ubuntu\" /></p><ul>  <li>start “Ubuntu” let it install and set your password(I’d recommand the same as you’ll use on your pi) and username</li>  <li><code class=\"highlighter-rouge\">sudo apt update &amp;&amp; sudo apt upgrade -y</code></li>  <li>mount the SD card to enable SSH:    <div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>sudo mkdir /mnt/dsudo mount -t drvfs D: /mnt/dcd /mnt/d</code></pre></div>    </div>  </li></ul><h4 id=\"the-rest-via-linux\">the rest via Linux</h4><ul>  <li>create an “ssh” file (no extension) under the boot partition:</li>  <li><code class=\"highlighter-rouge\">vi ssh</code></li>  <li>    <p>type <code class=\"highlighter-rouge\">:wq</code> and hit enter</p>  </li>  <li>now you can put the SD in your pi, connect ethernet(CAT5.e recommandet) and finnaly plug in power</li>  <li>after boot use <code class=\"highlighter-rouge\">ssh pi@raspberrypi.local</code></li>  <li>password: raspberry</li></ul><p><img src=\"\" alt=\"ssh login\" /></p><ul>  <li>use <code class=\"highlighter-rouge\">ifconfig</code> to see the PI’s mac adress</li></ul><p><img src=\"\" alt=\"ifconfig from pi\" /></p><ul>  <li>set static ip via your router</li>  <li>    <p>reboot pi</p>  </li>  <li><code class=\"highlighter-rouge\">ssh pi@&lt;your ip&gt;</code></li>  <li>optional <code class=\"highlighter-rouge\">sudo raspi-config</code> to change your password</li>  <li><code class=\"highlighter-rouge\">sudo apt update &amp;&amp; sudo apt upgrade -y</code></li>  <li>now the actuall install:</li>  <li><code class=\"highlighter-rouge\">curl -sSL https://install.pi-hole.net | bash</code></li>  <li>keep all of the preset preferences</li>  <li>take a screenshot of the finish page with the ip and your password to the analytics</li>  <li>type <code class=\"highlighter-rouge\">exit</code> hit enter, to get out of the ssh connection</li></ul><h3 id=\"set-the-new-dns-server\">set the new DNS Server</h3><h4 id=\"ubuntu\">ubuntu</h4><p><code class=\"highlighter-rouge\">sudo vi /etc/netplan/01-netcfg.yaml</code></p><h4 id=\"android\">android</h4><h4 id=\"windows\">windows</h4><h3 id=\"check-statistics\">check statistics</h3><p><a href=\"http://192.168.0.30/admin/index.php\">http://192.168.0.30/admin/index.php</a></p><h4 id=\"souces\">Souces:</h4><p>https://www.howtogeek.com/249966/how-to-install-and-use-the-linux-bash-shell-on-windows-10/https://superuser.com/questions/1114341/windows-10-ubuntu-bash-shell-how-do-i-mount-other-windows-driveshttps://linustechtips.com/main/topic/1094810-pi-hole-setup-tutorial/</p>",
                "url": "http://0.0.0.0:4000/2020/06/30/pihole.html",
                
                                
                
                "date_published": "2020-06-30T00:00:00+02:00",
                "date_modified": "2020-06-30T00:00:00+02:00",
                
                "author":  "Hisfantor" 
                
            },
        
            {
                "title": "webdesign coding setup",
                "content_text": "Sublime:$ wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add - $ echo “deb https://download.sublimetext.com/ apt/stable/” | sudo tee /etc/apt/sources.list.d/sublime-text.list$ sudo apt update &amp;&amp; sudo apt install sublime-textSCSS:sudo apt install npmsudo npm install -g sassscss syntax in sublime:Ctrl + Shift + Ppackage control: install packageSCSSCtrl + Shift + PSet syntax: SCSSsass –watch style.scss style.csslocal server:sudo python3 -m http.server 80sets up an http server in the current folder on http://0.0.0.0:80/orpython -m SimpleHTTPServer 8000live updates:&lt;script type=\"text/javascript\" src=\"http://livejs.com/live.js\"&gt;&lt;/script&gt;",
                "content_html": "<p>Sublime:$ wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add - $ echo “deb https://download.sublimetext.com/ apt/stable/” | sudo tee /etc/apt/sources.list.d/sublime-text.list$ sudo apt update &amp;&amp; sudo apt install sublime-text</p><p>SCSS:sudo apt install npmsudo npm install -g sass</p><p>scss syntax in sublime:Ctrl + Shift + Ppackage control: install packageSCSSCtrl + Shift + PSet syntax: SCSS</p><p>sass –watch style.scss style.css</p><p>local server:sudo python3 -m http.server 80sets up an http server in the current folder on http://0.0.0.0:80/orpython -m SimpleHTTPServer 8000</p><p>live updates:<code class=\"highlighter-rouge\">&lt;script type=\"text/javascript\" src=\"http://livejs.com/live.js\"&gt;&lt;/script&gt;</code></p>",
                "url": "http://0.0.0.0:4000/2020/03/17/webdesign-coding-setup.html",
                
                                
                
                "date_published": "2020-03-17T00:00:00+01:00",
                "date_modified": "2020-03-17T00:00:00+01:00",
                
                "author":  "Hisfantor" 
                
            },
        
            {
                "title": "Let's Split setup",
                "content_text": "Let’s split, USB in left half tutorial  sudo apt-get updateupdates repository packages  sudo apt-get install git cmake make build-essential autoconf gcc-avr binutils-avr gdb-avr avr-libc avrdude libusb-dev libusb-1.0-0-devthat installs stuff and makes the make work  cdGoes into your home directory (for example /home/Hisfantor)  git clone https://github.com/qmk/qmk_firmware.git QMKclones the qmk from github into the folder QMK under /home/Hisfantor(So it’s /home/Hisfantor/qmk)  cd qmkgo into the qmk folder  sudo make lets_split/rev2:defaultthat should create the .hex for the default layout of lets_split  make git-submodulesif he wants them give him what he needsprobably wont workIf it doesn’t work, try make again(always from the qmk folder)  ls /dev/tty*there should be a ttyACM0 or something, thats the pro micro in bootloaderRemember, it’s there only for approx 7 seconds  sudo avrdude -p atmega32u4 -P /dev/ttyACM0 -c avr109 -U flash:w:lets_split_rev2_default.hexthat will flash the pro micro but make sure you are in bootloader mode have only one half connected and no aux(klinke) in",
                "content_html": "<p>Let’s split, USB in left half tutorial</p><blockquote>  <p>sudo apt-get updateupdates repository packages</p></blockquote><blockquote>  <p>sudo apt-get install git cmake make build-essential autoconf gcc-avr binutils-avr gdb-avr avr-libc avrdude libusb-dev libusb-1.0-0-devthat installs stuff and makes the make work</p></blockquote><blockquote>  <p>cdGoes into your home directory (for example /home/Hisfantor)</p></blockquote><blockquote>  <p>git clone https://github.com/qmk/qmk_firmware.git QMKclones the qmk from github into the folder QMK under /home/Hisfantor(So it’s /home/Hisfantor/qmk)</p></blockquote><blockquote>  <p>cd qmkgo into the qmk folder</p></blockquote><blockquote>  <p>sudo make lets_split/rev2:defaultthat should create the .hex for the default layout of lets_split</p></blockquote><blockquote>  <p>make git-submodulesif he wants them give him what he needsprobably wont workIf it doesn’t work, try make again(always from the qmk folder)</p></blockquote><blockquote>  <p>ls /dev/tty*there should be a ttyACM0 or something, thats the pro micro in bootloaderRemember, it’s there only for approx 7 seconds</p></blockquote><blockquote>  <p>sudo avrdude -p atmega32u4 -P /dev/ttyACM0 -c avr109 -U flash:w:lets_split_rev2_default.hexthat will flash the pro micro but make sure you are in bootloader mode have only one half connected and no aux(klinke) in</p></blockquote>",
                "url": "http://0.0.0.0:4000/2020/03/17/lets-split-setup.html",
                
                                
                
                "date_published": "2020-03-17T00:00:00+01:00",
                "date_modified": "2020-03-17T00:00:00+01:00",
                
                "author":  "Hisfantor" 
                
            },
        
            {
                "title": "hugo setup",
                "content_text": "sudo apt install hugohugo versionhugo new site newsitenamehugo new posts/first-post.mdvim content/posts/first-post.mdhugo servergit initgit submodule add theme github clone themes/themenamecp themes/dracula/exampleSite/* . -rchange in config.toml themesDir, theme, baseurlconfig.toml add publishDir = “docs”hugogit remote add origin new github repogit add –allgit commit -m “first-commit”git push origin master",
                "content_html": "<p>sudo apt install hugohugo versionhugo new site newsitename</p><p>hugo new posts/first-post.mdvim content/posts/first-post.md</p><p>hugo servergit initgit submodule add <em>theme github clone</em> themes/themenamecp themes/dracula/exampleSite/* . -rchange in config.toml themesDir, theme, baseurl</p><p>config.toml add publishDir = “docs”hugo</p><p>git remote add origin <em>new github repo</em>git add –allgit commit -m “first-commit”git push origin master</p>",
                "url": "http://0.0.0.0:4000/2020/03/17/hugo-setup.html",
                
                                
                
                "date_published": "2020-03-17T00:00:00+01:00",
                "date_modified": "2020-03-17T00:00:00+01:00",
                
                "author":  "Hisfantor" 
                
            },
        
            {
                "title": "Download Audible Audiobooks (AAX to mp3)",
                "content_text": "1. Download all your audiobooks  go to audible.com  click “Library”  there will be all audiobooks with a download button on the right  download everything you want to your aax folder2. Get the Key  you need an identification key to your account do convert these aax files  we will use a software from github here so if you dont have git installd you can do so by using sudo apt install git  the software uses pip and Python (2.7 and up)  the Chrome Driver I use here is 64bit so if you have a 32bit system or an other chrome version check here for alternatives  I will extract the Driver zip with 7z (sudo apt install p7zip-full)  sadly it really runs in google-chrome not chromium so to install that:wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.debsudo dpkg -i google-chrome-stable_current_amd64.debgit clone https://github.com/inAudible-NG/audible-activator.git #thats the Softwarecd audible-activator pip install --user requests #these two are Requirements for this Softwarepip install --user seleniumwget https://chromedriver.storage.googleapis.com/2.35/chromedriver_linux64.zip #that's a 64bit Chrome Driver7z e chromedriver_linux64.zip #extract the .zip./audible-activator.py --username=&lt;your_username&gt; --password=&lt;your_password&gt; # run the Script with your username and password  that should open a new chrome window log you in, reload close again and end up with your code activation_bytes: fxxxxxx4  I had probles that the login had an “I’m a human check” if you have that and cant login use the -d flag (./audible-activator.py --username=&lt;your_username&gt; --password=&lt;your_password&gt; -d) which will wait for you to log in manually3. actually converting stuff  We’ll need an other software from github here which hase some dependencies as well  the standard converting mode is to mp3 with one file for each capital but there are many more options  without any other flags you’ll get an “Audiobook” folder containing the Books sorted by Auther in individual folderssudo apt-get updatesudo apt-get install ffmpeg libav-tools x264 x265 bc #dependenciesgit clone https://github.com/KrumpetPirate/AAXtoMP3.git #ConverterAAXtoMP3/AAXtoMP3 --authcode &lt;authcode&gt; ./*.aax #convert everything right here4. runnig both programs should look something like this:sauce:  https://github.com/KrumpetPirate/AAXtoMP3  https://github.com/inAudible-NG/audible-activator  https://itsfoss.com/install-chrome-ubuntu/  https://linuxhint.com/install-7zip-compression-tool-on-ubuntu/  https://code-bude.net/2017/02/12/audible-aax-dateien-in-mp3-umwandeln-unter-linux/",
                "content_html": "<h3 id=\"1-download-all-your-audiobooks\">1. Download all your audiobooks</h3><ul>  <li>go to audible.com</li>  <li>click “Library”</li>  <li>there will be all audiobooks with a download button on the right</li>  <li>download everything you want to your aax folder</li></ul><h3 id=\"2-get-the-key\">2. Get the Key</h3><ul>  <li>you need an identification key to your account do convert these aax files</li>  <li>we will use a software from github here so if you dont have git installd you can do so by using <code class=\"highlighter-rouge\">sudo apt install git</code></li>  <li>the software uses pip and Python (2.7 and up)</li>  <li>the Chrome Driver I use here is 64bit so if you have a 32bit system or an other chrome version check <a href=\"https://sites.google.com/a/chromium.org/chromedriver/downloads\">here</a> for alternatives</li>  <li>I will extract the Driver zip with 7z (<code class=\"highlighter-rouge\">sudo apt install p7zip-full</code>)</li>  <li>sadly it really runs in google-chrome not chromium so to install that:</li></ul><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb<span class=\"nb\">sudo </span>dpkg <span class=\"nt\">-i</span> google-chrome-stable_current_amd64.deb</code></pre></div></div><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>git clone https://github.com/inAudible-NG/audible-activator.git <span class=\"c\">#thats the Software</span><span class=\"nb\">cd </span>audible-activator pip <span class=\"nb\">install</span> <span class=\"nt\">--user</span> requests <span class=\"c\">#these two are Requirements for this Software</span>pip <span class=\"nb\">install</span> <span class=\"nt\">--user</span> seleniumwget https://chromedriver.storage.googleapis.com/2.35/chromedriver_linux64.zip <span class=\"c\">#that's a 64bit Chrome Driver</span>7z e chromedriver_linux64.zip <span class=\"c\">#extract the .zip</span>./audible-activator.py <span class=\"nt\">--username</span><span class=\"o\">=</span>&lt;your_username&gt; <span class=\"nt\">--password</span><span class=\"o\">=</span>&lt;your_password&gt; <span class=\"c\"># run the Script with your username and password</span></code></pre></div></div><ul>  <li>that should open a new chrome window log you in, reload close again and end up with your code <code class=\"highlighter-rouge\">activation_bytes: fxxxxxx4</code></li>  <li>I had probles that the login had an “I’m a human check” if you have that and cant login use the -d flag (<code class=\"highlighter-rouge\">./audible-activator.py --username=&lt;your_username&gt; --password=&lt;your_password&gt; -d</code>) which will wait for you to log in manually</li></ul><h3 id=\"3-actually-converting-stuff\">3. actually converting stuff</h3><ul>  <li>We’ll need an other software from github here which hase some dependencies as well</li>  <li>the standard converting mode is to mp3 with one file for each capital but <a href=\"https://github.com/KrumpetPirate/AAXtoMP3\">there</a> are many more options</li>  <li>without any other flags you’ll get an “Audiobook” folder containing the Books sorted by Auther in individual folders</li></ul><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">sudo </span>apt-get update<span class=\"nb\">sudo </span>apt-get <span class=\"nb\">install </span>ffmpeg libav-tools x264 x265 bc <span class=\"c\">#dependencies</span>git clone https://github.com/KrumpetPirate/AAXtoMP3.git <span class=\"c\">#Converter</span>AAXtoMP3/AAXtoMP3 <span class=\"nt\">--authcode</span> &lt;authcode&gt; ./<span class=\"k\">*</span>.aax <span class=\"c\">#convert everything right here</span></code></pre></div></div><h3 id=\"4-runnig-both-programs-should-look-something-like-this\">4. runnig both programs should look something like this:</h3><p><img src=\"/assets/pictures/AAX/example.png\" alt=\"example pic\" /></p><h4 id=\"sauce\">sauce:</h4><ul>  <li><a href=\"https://github.com/KrumpetPirate/AAXtoMP3\">https://github.com/KrumpetPirate/AAXtoMP3</a></li>  <li><a href=\"https://github.com/inAudible-NG/audible-activator\">https://github.com/inAudible-NG/audible-activator</a></li>  <li><a href=\"https://itsfoss.com/install-chrome-ubuntu/\">https://itsfoss.com/install-chrome-ubuntu/</a></li>  <li><a href=\"https://linuxhint.com/install-7zip-compression-tool-on-ubuntu/\">https://linuxhint.com/install-7zip-compression-tool-on-ubuntu/</a></li>  <li><a href=\"https://code-bude.net/2017/02/12/audible-aax-dateien-in-mp3-umwandeln-unter-linux/\">https://code-bude.net/2017/02/12/audible-aax-dateien-in-mp3-umwandeln-unter-linux/</a></li></ul>",
                "url": "http://0.0.0.0:4000/2020/03/17/Download-Audible-Audiobooks.html",
                
                                
                
                "date_published": "2020-03-17T00:00:00+01:00",
                "date_modified": "2020-03-17T00:00:00+01:00",
                
                "author":  "Hisfantor" 
                
            },
        
            {
                "title": "How gio_motion designed and built his own keyboard",
                "content_text": "original post:  https://imgur.com/a/jq0plEy  https://www.reddit.com/r/MechanicalKeyboards/comments/cdgdgz/how_i_designed_and_built_my_own_keyboard_costs/How I designed and built my own keyboard [Costs and Resources]by u/gio_motionI recently built the keyboard I designed and I wanted to talk about the design process, which tools I used, which resources I found online and the problems I encountered.I have a lot of useful links to share, but Imgur is putting spaces in the middle of all of them! I’m sorry about it, you’ll have to delete the extra spaces.Design-wise, I’m a huge fan of Braun, but they never made keyboards, so I wanted to make mine as if it was part of a Braun product line-up from the 70s. Also one of my favorite keyboards of all time is the Data General Dasher, so I think my design tries to answer the question “what if the Dasher was made by Braun but with a modern layout?”Pinterest is great to gather references, I highly recommend the Pinterest Chrome Extension to quickly save the images you come across.This is the moodboard I made:https://pinterest.it/bocchigiovanni/keeb/The design I chose is called a Tray Mount, you can learn more about keyboard design following these links:Keyboard Construction Explained by Brian Lee:https://brianlee.blog/2018/11/23/guide-keyboard-construction-explained/Custom keyboard mounting styles by Thomas Baart:https://thomasbaart.nl/2019/04/07/cheat-sheet-custom-keyboard-mounting-styles/Basically the plate keeps together the switches, the switches are soldered to the PCB, and the PCB is screwed to the case.Then I headed over at http://keyboard-layout-editor.com/ and found out which layout I actually needed. It’s a keyboard meant for office use and I’m a 3D animator, so I can’t really work without the numpad. Ths layout has all the keys I need for my work and nothing more.Once you have your layout, just copy the data from the Raw Data tab and go to this awesome website to generate the DXF file of your plate: http://builder.swillkb.com/. Here you can choose which type of switch you are going to use and which type of stabilizers. For my build I chose Aliaz switches (they are MX mount), which are silent and tactile, and Cherry PCB-mount stabilizers. Here i also downloaded the CAD drawing of the plate.It is at this point that I started to look for what keycap set to use. In the end I chose the Black DSA set from PMK:https://pimpmykeyboard.com/dsa-black-white-keyset/I’ll talk more about the shopping list later. I really like that the DSA profile has the same height for all the rows, it makes it easier to come up with unconventional layouts without worrying about different heights.Before jumping into CAD, I made a quick concept render in Cinema 4D, one of the softwares I use in my work. It’s not free, but if you want to experiment with shapes, colours and materials without worrying about tolerances and other manufacturing holdups, Blender is a free open source software which will help you focus on the design side of your keyboard.If you are skilled in CAD modeling feel free to start your concept there, I just happen to be more familiar with 3D rendering softwares. Also, your final concept will look more convincing if done with a proper 3D rendering engine (I used Redshift, Blender has Cycles).I imported the DXF file and I extruded it of 1,5mm, which is the thickness MX switches require to clip. I also used these DSA 3D models I found on Thingiverse:https://thingiverse.com/thing:2172302This was my final concept.Once I was happy with the look, I started to learn about custom PCBs. I thought about hand-wiring it, but the idea of making my own PCB seemed way more fun. I still wasn’t feeling comfortable about my soldering skills, so I ended up with using the PCB only to wire the keys together and to provide a socket for the microcontroller, which is a Teensy 2. To wire together the columns and rows I recommend heading over at Keyboard Firmware Builder and pasting your keyboard layout from KLE, and the website will make you a visual guide for your wiring. We’ll get back to that website once we are ready to compile the firmware. Choosing a controller is all about the pins, you need one with at least as many pins as the sum of your keyboard’s columns and rows. For me it was 25, and the Teensy 2 has just that, 25 pins! You can fit more columns and rows if you get creative with the wiring, but I didn’t have to.If designing a PCB scares you, fear not! I followed this awesome guide by u/ai03:https://wiki.ai03.me/books/pcb-design/chapter/pcb-designer-guideThe guide is very easy to follow and uses a free software called KiCad. It explains how to implement the microcontroller directly in the board, but instead I just grabbed a Teensy 2 footprint from the library provided in the guide and slapped it on the board. With this design, you just have to solder the switches, the diodes, the the Teensy itself with some header pins (they are cheap on Aliexpress).This is what my PCB schematics looks likeAnd this is what my PCB layout looks likeFrom KiCad you can export a 3D model of the PCB, which is going to be very useful for our CAD drawing.Above is the USB Type-C pinout diagram.The Teensy 2 is a mini-usb controller and I just couldn’t accept that. A device made in 2019 deserves to have a USB type-C connector and cable, so I made sure to implement that. My solution was to buy a USB-C daughter board and manually wire the pins to the mini-USB connector of the Teensy.This is the board I got, it’s made by Pololu:https://coolcomponents.co.uk/products/usb-2-0-type-c-connector-breakout-boardOne thing that is very cool, is that before buying it you can download a 3D model of the connector, again, very useful for the CAD drawing.You can also get a 3D model of the Teensy here:https://grabcad.com/library/teensy-2-0-board-1USB-C works a bit differently compared to an old school USB connector. What you need to know is that all the pins are doubled because the connector is reversible, and each pair that you want to use needs to be wired together (see picture above). Luckily this board does that for me and is ready to use, it also has a couple of resistors that connect the CC pins to ground. Some people online say that you need the resistors, some people say that you don’t, so here’s my take on it: if you want to connect your keyboard with a USB-C to USB-A cable, you don’t need any resistor. You can just wire the GND, D-, D+ and VCC pins respectively from one connector to the other and it will work (double pins still need to be paired). Instead, if you want to connect you keyboard with a USB-C to USB-C cable, it’s only going to work if you have those resistors in place that ground your CC pins. This basically tells your computer that the keyboard is a device, and not a source of power.Now that we have every file we need, it is a good time to put everything together in a CAD software and design the actual shape of the case, to get it ready for 3D printing. The software I used is Fusion360:https://autodesk.com/products/fusion-360/overview#bannerIt’s free for 1 year if you are a hobbyist, and for 3 years if you are a student. It is also much more intuitive than other CAD softwares, while also having specific tools for 3D printing. These are some useful videos about making an enclosure in Fusion360:https://youtube.com/watch?v=E0bhdr84FNUhttps://youtube.com/watch?v=g9mHhp_SHGEhttps://youtube.com/watch?v=YxBamwc6s7UI started by making the case, and then I imported the plate DXF and the PCB model, and I adjusted the case so that it would fit all the components. Then I made standoffs to support the PCB and holes in the plate to allow for the screws to go in. The distance between the top of the PCB and the top of the plate must be 5mm, to allow space for the MX switches.The screws I’m using are M2 button-head hex drive screws, you can insert them in your project by going to Insert &gt; McMasterCarr Component and choosing from the menu. I bought mine from eBay. Since the case is 3D printed, it is not possible to print a thread for such small screws, so what I did was making holes where a screw would go (like on the standoffs) with a 3,1mm diameter, so that I could then push inside a brass threaded insert using a soldering iron, to melt the plastic and glue it in place. The inserts I used are M2 Brass inserts I found on ebay, which have a 3,3mm diameter. Your hole needs to be 0,2mm smaller than the inserts, to make sure that it makes a tight fit.Here’s a closeup of my USB port + daughter board.I added some ridges at the bottom of the case to give it a bit more strength and to complete the design I made a top plate, 1,5mm thick, that closes the gap between the keys and the edge of the case. It was supposed to be held in place by magnets glued to the case (being made of mild steel), but in the end it turned out that the fit is so tight, that it just snaps into place. From then I exported the top plate sketch from Fusion into a DXF file, to be sent for laser cutting.Since the case was going to be printed by an Ender 3 printer, I split it into 3 pieces (it’s a long keyboard), making sure to make some 2mm holes on the inner edge of every piece, to make it easier to glue it back together, like shown in this video (starting at 40:30) https://youtube.com/watch?v=PW35zmq8M5oYou can explore my CAD project in your browser:https://a360.co/2KE3Y0WCO$TSLet’s talk money. Here’s how much I paid for each component, as well as the services I used. Note that I live in the UK, so your mileage may vary.[Prices shown in British Pounds, all the prices include shipping]Aliaz Switches x90 + Cherry stabs from KBDFans…………………..54£Black DSA keycap set from PMK……………………………………………98£Plate (aluminum) + Top plate (mild steel) at Laserboost………..97£PCB x5 from JLCPCB……………………………………………………………..18£Teensy 2 from Hobbytronics…………………………………………………18£USB-C Breackout Board from Cool Components…………………….5£Screws + Inserts + Diodes + mini usb connector from ebay…..13£Tot……………………………………………………………………………………..303£Luckily I didn’t have to spend money to print the case, because a friend of mine offered to help. If you don’t know anyone with a 3D printer, you may actually do, try asking around and if you are still unlucky you can head over to r/3Dprintmything and ask for help.This shopping list doesn’t include the tools required, like the soldering iron, or the “consumables” like super glue or sand paper, which you may or may not already have. I’ll go over those shortly.Electronic AssemblyI started with soldering the diodes. My design uses SMD diodes which are much faster to solder, and are not as difficult as many people think. I used 0,5 soldering wire from Mechanic and I followed these videos on YouTube:https://youtube.com/watch?v=f9fbqks3BS8https://youtube.com/watch?v=wEBrvfWwzuQThe diodes need to be soldered in a specific direction: the arrow in your schematics indicates where the cathode is (the negative side) which is represented on the diode by a thin gray line, see picture above.Once the diodes were in place, I soldered the pins of the Teensy on the PCB using some header pins with a 2,54mm pitch, I just bought some cheap ones from Aliexpress (100 for 0,90$). The reason I didn’t solder the Teensy in place is that its footprint is located on top of two switches to save space (see picture above) which means that if I solder the Teensy now I cannot solder the switches anymore. Next, I clipped, lubed and installed the stabilizers following this guide:https://youtube.com/watch?v=u-HYNmtP1HcI then snapped the plate onto the PCB. This was tricky because it’s a long board (20 columns) and the PCB is prone to warping, so it required some brute force. With the plate in place on the PCB, I started to clip the switches onto it, making sure that the pins were straight (they get bent easily during shipping). I then soldered the switches, and than the Teensy. This was very dangerous because there was no way I could test the pcb before soldering all the swithces and the Teensy in place, but it was the only way to accomplish this design.To connect the Teensy to the daughter board, I bought a USB mini connector on Ebay and I soldered 4 wires on it following the diagram above (you can ignore the ID pin), and then I soldered them to the USB-C board following the text on it.Parts out of the 3D printer, an Ender 3.The 3D printed parts (printed in PLA) had some under extrusion, which is a printing defect of some printers, basically some layers are the wrong thickness, and they leave lines like crevices on the print. To overcome this I sanded the prints with 220 grade sand paper to remove the outer imperfections and to prepare them to be primed with Rustoleum Primer, what will fill the crevices. Before doing that I glued them together using Loctite SuperGlue which works like a charm on PLA. I then used Polyfilla to seal the gaps, and then finally the primer (not before another round of sand paper). I then applied three coats of white matte paint.Be sure to protect your thread holes with masking tape before priming and painting, so that they don’t get clogged.The threads are very easy to insert, just heat up a soldering iron with a medium or large tip, and push them in. Be careful not to leave the iron there more than necessary or you risk melting the standoffs completely, follow this giude for more details:https://matterhackers.com/articles/fasteners-for-3d-printingPolyfilla applied after gluingRustoleum Primer appliedMatte white paintAfter all that soldering, sanding, priming, and painting, it was finally time to put the whole thing together.I secured the USB-C board with two M2 screws, and I attached the connector to the Teensy.Then I flipped the board over and I screwed it in place using a 1,3mm allen key.The board wasn’t fitting all the way in, because of the header pins of the daughter board.So I had to chop them off, and they are still touching the PCB a bit, but it’s fine. I made sure to put a strip of electric tape on the pins to isolate them.Finally the keycaps and the top plate, which initially wasn’t fitting at all! The bottom keys where jamming against it because the lower edge was too wide. So I had to use a file to file down the steel to be the right size.Not fun.After painting the top plate with Rustoleum Satin Black and snapping it on top, this is what it looks like.r/mechanicalkeyboardFIRMWAREI going to explain how to compile a firmware in the easiest way possible, which is using Keyboard Firmware Builder (https://kbfirmware.com/) to create a starting point. You could use that as your final firmware, but I recommend setting up a QMK environment on your computer to tweak it to suit your needs, in case you need more advanced functions like Unicode support or special keycodes.KFB is very easy to use, just import your keyboard layout from Keyboard Layout Editor and a wiring diagram will appear. From then you just need to go through the tabs and give the website all the information it needs. In the Wiring tab you don’t need to do anything since your PCB should already be wired that way.The Pins tab require you to specify which pins are your column and rows wired to. To do this I opened up KiCad and compared my schematics to the Teensy 2 pinout diagram, to find the name of the pins. For example I can see on the left that my ROW0 is wired to 21_A0, I look for pin 21 on the right and I find out that it is called F0, so in the website I link ROW0 to F0. I did this for all the pins.The keymap tab is very straightforward, just click on each button and assign which key you want it to be. To create a momentary layer, assign M(1) to the key, so that when that key is held pressed, layer 1 will activate.I didn’t change any other setting and I downloaded the source code for later editing. if you are satisfied with the firmware as it is, you can hit the compile button and flash it on your keyboard. The Teensy 2 is very easy to flash, you only need a small software called Teensy Loader:https://pjrc.com/teensy/loader.htmlWhen the software is open, just push the button on the Teensy (or hit the soft reset shortcut on your keyboard), select your .hex file from the File menu, and hit the Program button followed by the Reboot button. The keyboard should now be perfectly functional!I won’t go into the manual programming of the keyboard because I’m not an expert, but you can learn more about it here:The Complete Newbs Guide To QMKhttps://docs.qmk.fm/#/newbs?id=the-complete-newbs-guide-to-qmkABOUT MY STLsI learned a lot with this project, but i’d prefer not to share my STL and DXF files, because this is my first keyboard and they have a lot of defects, as I explained above. The case is super thin around the USB port, so it’s very fragile right now and  there’s already a tiny crack. The steel top plate didn’t fit with my keycaps at first and I had to file it down, it’s still not 100% precise as of now, I’ll have to bend it in some way. The USB daughter board sits too high and grinds against the PCB, because of this the whole board sits in a warped position. The keys sit higher near the left and right edges, and are lower in the center and I’m not sure why.You can have a look at the CAD project here: https://a360.co/2KE3Y0W if you want to make a similar design, but my STL files are not worth sharing in my opinion, since I have still much to learn.Feel free to message me at u/gio_motion or on Instagram at @gio_motion if you have any question!I hope this explanation is helpful to someone and I hope it will inspire more people to make their own design instead of buying a kit that doesn’t leave much space for customization.Last thing, I still have 4 spare copies of my PCB, so if someone is interested just hit me up!Gio",
                "content_html": "<hr /><h4 id=\"original-post\">original post:</h4><ul>  <li><a href=\"https://imgur.com/a/jq0plEy\">https://imgur.com/a/jq0plEy</a></li>  <li><a href=\"https://www.reddit.com/r/MechanicalKeyboards/comments/cdgdgz/how_i_designed_and_built_my_own_keyboard_costs/\">https://www.reddit.com/r/MechanicalKeyboards/comments/cdgdgz/how_i_designed_and_built_my_own_keyboard_costs/</a></li></ul><hr /><h2 id=\"how-i-designed-and-built-my-own-keyboard-costs-and-resources\">How I designed and built my own keyboard [Costs and Resources]</h2><p>by <a href=\"https://old.reddit.com/user/gio_motion\">u/gio_motion</a></p><p><img src=\"https://i.imgur.com/QwomFCW.jpg\" alt=\"rendering\" />I recently built the keyboard I designed and I wanted to talk about the design process, which tools I used, which resources I found online and the problems I encountered.</p><p>I have a lot of useful links to share, but Imgur is putting spaces in the middle of all of them! I’m sorry about it, you’ll have to delete the extra spaces.</p><p>Design-wise, I’m a huge fan of Braun, but they never made keyboards, so I wanted to make mine as if it was part of a Braun product line-up from the 70s. Also one of my favorite keyboards of all time is the Data General Dasher, so I think my design tries to answer the question “what if the Dasher was made by Braun but with a modern layout?”Pinterest is great to gather references, I highly recommend the Pinterest Chrome Extension to quickly save the images you come across.</p><p>This is the moodboard I made:</p><p><a href=\"https://pinterest.it/bocchigiovanni/keeb/\">https://pinterest.it/bocchigiovanni/keeb/</a></p><p><img src=\"https://i.imgur.com/cXZQwrm.jpg\" alt=\"tray mount\" /></p><p>The design I chose is called a Tray Mount, you can learn more about keyboard design following these links:</p><p>Keyboard Construction Explained by Brian Lee:</p><p><a href=\"https://brianlee.blog/2018/11/23/guide-keyboard-construction-explained/\">https://brianlee.blog/2018/11/23/guide-keyboard-construction-explained/</a></p><p>Custom keyboard mounting styles by Thomas Baart:</p><p><a href=\"https://thomasbaart.nl/2019/04/07/cheat-sheet-custom-keyboard-mounting-styles/\">https://thomasbaart.nl/2019/04/07/cheat-sheet-custom-keyboard-mounting-styles/</a></p><p>Basically the plate keeps together the switches, the switches are soldered to the PCB, and the PCB is screwed to the case.</p><p><img src=\"https://i.imgur.com/dVer6mH.jpg\" alt=\"keyboard-layout-editor\" />Then I headed over at <a href=\"http://keyboard-layout-editor.com/\">http://keyboard-layout-editor.com/</a> and found out which layout I actually needed. It’s a keyboard meant for office use and I’m a 3D animator, so I can’t really work without the numpad. Ths layout has all the keys I need for my work and nothing more.</p><p>Once you have your layout, just copy the data from the Raw Data tab and go to this awesome website to generate the DXF file of your plate: <a href=\"http://builder.swillkb.com/\">http://builder.swillkb.com/</a>. Here you can choose which type of switch you are going to use and which type of stabilizers. For my build I chose Aliaz switches (they are MX mount), which are silent and tactile, and Cherry PCB-mount stabilizers. Here i also downloaded the CAD drawing of the plate.</p><p>It is at this point that I started to look for what keycap set to use. In the end I chose the Black DSA set from PMK:</p><p><a href=\"https://pimpmykeyboard.com/dsa-black-white-keyset/\">https://pimpmykeyboard.com/dsa-black-white-keyset/</a></p><p>I’ll talk more about the shopping list later. I really like that the DSA profile has the same height for all the rows, it makes it easier to come up with unconventional layouts without worrying about different heights.</p><p>Before jumping into CAD, I made a quick concept render in Cinema 4D, one of the softwares I use in my work. It’s not free, but if you want to experiment with shapes, colours and materials without worrying about tolerances and other manufacturing holdups, Blender is a free open source software which will help you focus on the design side of your keyboard.If you are skilled in CAD modeling feel free to start your concept there, I just happen to be more familiar with 3D rendering softwares. Also, your final concept will look more convincing if done with a proper 3D rendering engine (I used Redshift, Blender has Cycles).</p><p>I imported the DXF file and I extruded it of 1,5mm, which is the thickness MX switches require to clip. I also used these DSA 3D models I found on Thingiverse:</p><p><a href=\"https://thingiverse.com/thing:2172302\">https://thingiverse.com/thing:2172302</a></p><p><img src=\"https://i.imgur.com/KhIZgri.jpg\" alt=\"full rendering\" />This was my final concept.</p><p>Once I was happy with the look, I started to learn about custom PCBs. I thought about hand-wiring it, but the idea of making my own PCB seemed way more fun. I still wasn’t feeling comfortable about my soldering skills, so I ended up with using the PCB only to wire the keys together and to provide a socket for the microcontroller, which is a Teensy 2. To wire together the columns and rows I recommend heading over at Keyboard Firmware Builder and pasting your keyboard layout from KLE, and the website will make you a visual guide for your wiring. We’ll get back to that website once we are ready to compile the firmware. Choosing a controller is all about the pins, you need one with at least as many pins as the sum of your keyboard’s columns and rows. For me it was 25, and the Teensy 2 has just that, 25 pins! You can fit more columns and rows if you get creative with the wiring, but I didn’t have to.</p><p>If designing a PCB scares you, fear not! I followed this awesome guide by u/ai03:</p><p><a href=\"https://wiki.ai03.me/books/pcb-design/chapter/pcb-designer-guide\">https://wiki.ai03.me/books/pcb-design/chapter/pcb-designer-guide</a></p><p>The guide is very easy to follow and uses a free software called KiCad. It explains how to implement the microcontroller directly in the board, but instead I just grabbed a Teensy 2 footprint from the library provided in the guide and slapped it on the board. With this design, you just have to solder the switches, the diodes, the the Teensy itself with some header pins (they are cheap on Aliexpress).</p><p><img src=\"https://i.imgur.com/AiXmzQD.jpg\" alt=\"pcb design\" />This is what my PCB schematics looks like</p><p><img src=\"https://i.imgur.com/KPdaVOk.jpg\" alt=\"pcb layout\" />And this is what my PCB layout looks like</p><p><img src=\"https://i.imgur.com/M9P1n1U.jpg\" alt=\"pcb rendering\" />From KiCad you can export a 3D model of the PCB, which is going to be very useful for our CAD drawing.</p><p><img src=\"https://i.imgur.com/k81o0Rw.jpg\" alt=\"usb-c pinout\" />Above is the USB Type-C pinout diagram.</p><p>The Teensy 2 is a mini-usb controller and I just couldn’t accept that. A device made in 2019 deserves to have a USB type-C connector and cable, so I made sure to implement that. My solution was to buy a USB-C daughter board and manually wire the pins to the mini-USB connector of the Teensy.</p><p>This is the board I got, it’s made by Pololu:</p><p><a href=\"https://coolcomponents.co.uk/products/usb-2-0-type-c-connector-breakout-board\">https://coolcomponents.co.uk/products/usb-2-0-type-c-connector-breakout-board</a></p><p>One thing that is very cool, is that before buying it you can download a 3D model of the connector, again, very useful for the CAD drawing.</p><p>You can also get a 3D model of the Teensy here:</p><p><a href=\"https://grabcad.com/library/teensy-2-0-board-1\">https://grabcad.com/library/teensy-2-0-board-1</a></p><p>USB-C works a bit differently compared to an old school USB connector. What you need to know is that all the pins are doubled because the connector is reversible, and each pair that you want to use needs to be wired together (see picture above). Luckily this board does that for me and is ready to use, it also has a couple of resistors that connect the CC pins to ground. Some people online say that you need the resistors, some people say that you don’t, so here’s my take on it: if you want to connect your keyboard with a USB-C to USB-A cable, you don’t need any resistor. You can just wire the GND, D-, D+ and VCC pins respectively from one connector to the other and it will work (double pins still need to be paired). Instead, if you want to connect you keyboard with a USB-C to USB-C cable, it’s only going to work if you have those resistors in place that ground your CC pins. This basically tells your computer that the keyboard is a device, and not a source of power.</p><p><img src=\"https://i.imgur.com/xscNnRN.jpg\" alt=\"case rendering\" />Now that we have every file we need, it is a good time to put everything together in a CAD software and design the actual shape of the case, to get it ready for 3D printing. The software I used is Fusion360:</p><p><a href=\"https://autodesk.com/products/fusion-360/overview#banner\">https://autodesk.com/products/fusion-360/overview#banner</a></p><p>It’s free for 1 year if you are a hobbyist, and for 3 years if you are a student. It is also much more intuitive than other CAD softwares, while also having specific tools for 3D printing. These are some useful videos about making an enclosure in Fusion360:</p><p><a href=\"https://youtube.com/watch?v=E0bhdr84FNU\">https://youtube.com/watch?v=E0bhdr84FNU</a></p><p><a href=\"https://youtube.com/watch?v=g9mHhp_SHGE\">https://youtube.com/watch?v=g9mHhp_SHGE</a></p><p><a href=\"https://youtube.com/watch?v=YxBamwc6s7U\">https://youtube.com/watch?v=YxBamwc6s7U</a></p><p>I started by making the case, and then I imported the plate DXF and the PCB model, and I adjusted the case so that it would fit all the components. Then I made standoffs to support the PCB and holes in the plate to allow for the screws to go in. The distance between the top of the PCB and the top of the plate must be 5mm, to allow space for the MX switches.</p><p>The screws I’m using are M2 button-head hex drive screws, you can insert them in your project by going to Insert &gt; McMasterCarr Component and choosing from the menu. I bought mine from eBay. Since the case is 3D printed, it is not possible to print a thread for such small screws, so what I did was making holes where a screw would go (like on the standoffs) with a 3,1mm diameter, so that I could then push inside a brass threaded insert using a soldering iron, to melt the plastic and glue it in place. The inserts I used are M2 Brass inserts I found on ebay, which have a 3,3mm diameter. Your hole needs to be 0,2mm smaller than the inserts, to make sure that it makes a tight fit.</p><p><img src=\"https://i.imgur.com/K7FF3c9.jpg\" alt=\"usb-c rendering\" />Here’s a closeup of my USB port + daughter board.</p><p>I added some ridges at the bottom of the case to give it a bit more strength and to complete the design I made a top plate, 1,5mm thick, that closes the gap between the keys and the edge of the case. It was supposed to be held in place by magnets glued to the case (being made of mild steel), but in the end it turned out that the fit is so tight, that it just snaps into place. From then I exported the top plate sketch from Fusion into a DXF file, to be sent for laser cutting.</p><p>Since the case was going to be printed by an Ender 3 printer, I split it into 3 pieces (it’s a long keyboard), making sure to make some 2mm holes on the inner edge of every piece, to make it easier to glue it back together, like shown in this video (starting at 40:30) <a href=\"https://youtube.com/watch?v=PW35zmq8M5o\">https://youtube.com/watch?v=PW35zmq8M5o</a></p><p>You can explore my CAD project in your browser:</p><p><a href=\"https://a360.co/2KE3Y0W\">https://a360.co/2KE3Y0W</a></p><p>CO$TS</p><p>Let’s talk money. Here’s how much I paid for each component, as well as the services I used. Note that I live in the UK, so your mileage may vary.</p><p>[Prices shown in British Pounds, all the prices include shipping]</p><p>Aliaz Switches x90 + Cherry stabs from KBDFans…………………..54£</p><p>Black DSA keycap set from PMK……………………………………………98£</p><p>Plate (aluminum) + Top plate (mild steel) at Laserboost………..97£</p><p>PCB x5 from JLCPCB……………………………………………………………..18£</p><p>Teensy 2 from Hobbytronics…………………………………………………18£</p><p>USB-C Breackout Board from Cool Components…………………….5£</p><p>Screws + Inserts + Diodes + mini usb connector from ebay…..13£</p><p>Tot……………………………………………………………………………………..303£</p><p>Luckily I didn’t have to spend money to print the case, because a friend of mine offered to help. If you don’t know anyone with a 3D printer, you may actually do, try asking around and if you are still unlucky you can head over to r/3Dprintmything and ask for help.</p><p>This shopping list doesn’t include the tools required, like the soldering iron, or the “consumables” like super glue or sand paper, which you may or may not already have. I’ll go over those shortly.</p><p><img src=\"https://i.imgur.com/DPRn0f4.jpg\" alt=\"pcb\" />Electronic Assembly</p><p>I started with soldering the diodes. My design uses SMD diodes which are much faster to solder, and are not as difficult as many people think. I used 0,5 soldering wire from Mechanic and I followed these videos on YouTube:</p><p><a href=\"https://youtube.com/watch?v=f9fbqks3BS8\">https://youtube.com/watch?v=f9fbqks3BS8</a></p><p><a href=\"https://youtube.com/watch?v=wEBrvfWwzuQ\">https://youtube.com/watch?v=wEBrvfWwzuQ</a></p><p>The diodes need to be soldered in a specific direction: the arrow in your schematics indicates where the cathode is (the negative side) which is represented on the diode by a thin gray line, see picture above.</p><p><img src=\"https://i.imgur.com/VHeID5k.jpg\" alt=\"teensy pinout\" />Once the diodes were in place, I soldered the pins of the Teensy on the PCB using some header pins with a 2,54mm pitch, I just bought some cheap ones from Aliexpress (100 for 0,90$). The reason I didn’t solder the Teensy in place is that its footprint is located on top of two switches to save space (see picture above) which means that if I solder the Teensy now I cannot solder the switches anymore. Next, I clipped, lubed and installed the stabilizers following this guide:</p><p><a href=\"https://youtube.com/watch?v=u-HYNmtP1Hc\">https://youtube.com/watch?v=u-HYNmtP1Hc</a></p><p><img src=\"https://i.imgur.com/vQBEmTR.jpg\" alt=\"after switch installation\" />I then snapped the plate onto the PCB. This was tricky because it’s a long board (20 columns) and the PCB is prone to warping, so it required some brute force. With the plate in place on the PCB, I started to clip the switches onto it, making sure that the pins were straight (they get bent easily during shipping). I then soldered the switches, and than the Teensy. This was very dangerous because there was no way I could test the pcb before soldering all the swithces and the Teensy in place, but it was the only way to accomplish this design.</p><p><img src=\"https://i.imgur.com/jepHFYC.jpg\" alt=\"usb-c pinout\" />To connect the Teensy to the daughter board, I bought a USB mini connector on Ebay and I soldered 4 wires on it following the diagram above (you can ignore the ID pin), and then I soldered them to the USB-C board following the text on it.</p><p><img src=\"https://i.imgur.com/00wMEjo.jpg\" alt=\"3d-printed case\" />Parts out of the 3D printer, an Ender 3.</p><p><img src=\"https://i.imgur.com/yoVoYUB.jpg\" alt=\"3d-printed parts\" />The 3D printed parts (printed in PLA) had some under extrusion, which is a printing defect of some printers, basically some layers are the wrong thickness, and they leave lines like crevices on the print. To overcome this I sanded the prints with 220 grade sand paper to remove the outer imperfections and to prepare them to be primed with Rustoleum Primer, what will fill the crevices. Before doing that I glued them together using Loctite SuperGlue which works like a charm on PLA. I then used Polyfilla to seal the gaps, and then finally the primer (not before another round of sand paper). I then applied three coats of white matte paint.</p><p><img src=\"https://i.imgur.com/P5Dbp78.jpg\" alt=\"3d-printed holes\" />Be sure to protect your thread holes with masking tape before priming and painting, so that they don’t get clogged.</p><p>The threads are very easy to insert, just heat up a soldering iron with a medium or large tip, and push them in. Be careful not to leave the iron there more than necessary or you risk melting the standoffs completely, follow this giude for more details:</p><p><a href=\"https://matterhackers.com/articles/fasteners-for-3d-printing\">https://matterhackers.com/articles/fasteners-for-3d-printing</a></p><p><img src=\"https://i.imgur.com/mHt29iS.jpg\" alt=\"combined 3d-printed parts\" />Polyfilla applied after gluing</p><p><img src=\"https://i.imgur.com/orCETth.jpg\" alt=\"primered case\" />Rustoleum Primer applied</p><p><img src=\"https://i.imgur.com/WeNhaAl.jpg\" alt=\"painted case\" />Matte white paint</p><p><img src=\"https://i.imgur.com/Apv2L57.jpg\" alt=\"usb-c to teensy\" />After all that soldering, sanding, priming, and painting, it was finally time to put the whole thing together.</p><p>I secured the USB-C board with two M2 screws, and I attached the connector to the Teensy.Then I flipped the board over and I screwed it in place using a 1,3mm allen key.</p><p><img src=\"https://i.imgur.com/8ZFTnrR.jpg\" alt=\"rendering of controller placement\" />The board wasn’t fitting all the way in, because of the header pins of the daughter board.So I had to chop them off, and they are still touching the PCB a bit, but it’s fine. I made sure to put a strip of electric tape on the pins to isolate them.</p><p><img src=\"https://i.imgur.com/UNSGZgA.jpg\" alt=\"complete build\" />Finally the keycaps and the top plate, which initially wasn’t fitting at all! The bottom keys where jamming against it because the lower edge was too wide. So I had to use a file to file down the steel to be the right size.</p><p>Not fun.</p><p><img src=\"https://i.imgur.com/90WUuUj.jpg\" alt=\"completed keyboard\" />After painting the top plate with Rustoleum Satin Black and snapping it on top, this is what it looks like.</p><p><img src=\"https://i.imgur.com/9oTOJ87.jpg\" alt=\"beauty pic\" /></p><p><a href=\"https://old.reddit.com/r/MechanicalKeyboards/\">r/mechanicalkeyboard</a></p><p><img src=\"https://i.imgur.com/8CxJiyg.jpg\" alt=\"firmware\" />FIRMWARE</p><p>I going to explain how to compile a firmware in the easiest way possible, which is using Keyboard Firmware Builder (<a href=\"https://kbfirmware.com/\">https://kbfirmware.com/</a>) to create a starting point. You could use that as your final firmware, but I recommend setting up a QMK environment on your computer to tweak it to suit your needs, in case you need more advanced functions like Unicode support or special keycodes.</p><p>KFB is very easy to use, just import your keyboard layout from Keyboard Layout Editor and a wiring diagram will appear. From then you just need to go through the tabs and give the website all the information it needs. In the Wiring tab you don’t need to do anything since your PCB should already be wired that way.</p><p><img src=\"https://i.imgur.com/mqckLVM.jpg\" alt=\"teensy pinout\" />The Pins tab require you to specify which pins are your column and rows wired to. To do this I opened up KiCad and compared my schematics to the Teensy 2 pinout diagram, to find the name of the pins. For example I can see on the left that my ROW0 is wired to 21_A0, I look for pin 21 on the right and I find out that it is called F0, so in the website I link ROW0 to F0. I did this for all the pins.</p><p>The keymap tab is very straightforward, just click on each button and assign which key you want it to be. To create a momentary layer, assign M(1) to the key, so that when that key is held pressed, layer 1 will activate.I didn’t change any other setting and I downloaded the source code for later editing. if you are satisfied with the firmware as it is, you can hit the compile button and flash it on your keyboard. The Teensy 2 is very easy to flash, you only need a small software called Teensy Loader:</p><p><a href=\"https://pjrc.com/teensy/loader.html\">https://pjrc.com/teensy/loader.html</a></p><p>When the software is open, just push the button on the Teensy (or hit the soft reset shortcut on your keyboard), select your .hex file from the File menu, and hit the Program button followed by the Reboot button. The keyboard should now be perfectly functional!I won’t go into the manual programming of the keyboard because I’m not an expert, but you can learn more about it here:</p><p>The Complete Newbs Guide To QMK</p><p><a href=\"https://docs.qmk.fm/#/newbs?id=the-complete-newbs-guide-to-qmk\">https://docs.qmk.fm/#/newbs?id=the-complete-newbs-guide-to-qmk</a></p><p>ABOUT MY STLs</p><p>I learned a lot with this project, but i’d prefer not to share my STL and DXF files, because this is my first keyboard and they have a lot of defects, as I explained above. The case is super thin around the USB port, so it’s very fragile right now and  there’s already a tiny crack. The steel top plate didn’t fit with my keycaps at first and I had to file it down, it’s still not 100% precise as of now, I’ll have to bend it in some way. The USB daughter board sits too high and grinds against the PCB, because of this the whole board sits in a warped position. The keys sit higher near the left and right edges, and are lower in the center and I’m not sure why.</p><p>You can have a look at the CAD project here: <a href=\"https://a360.co/2KE3Y0W\">https://a360.co/2KE3Y0W</a> if you want to make a similar design, but my STL files are not worth sharing in my opinion, since I have still much to learn.Feel free to message me at <a href=\"https://old.reddit.com/user/gio_motion\">u/gio_motion</a> or on Instagram at <a href=\"https://www.instagram.com/gio_motion/\">@gio_motion</a> if you have any question!I hope this explanation is helpful to someone and I hope it will inspire more people to make their own design instead of buying a kit that doesn’t leave much space for customization.</p><p>Last thing, I still have 4 spare copies of my PCB, so if someone is interested just hit me up!</p><p>Gio</p>",
                "url": "http://0.0.0.0:4000/2019/07/15/How-I-designed-and-built-my-own-keyboard-Costs-and-Resources-by-gio_motion.html",
                
                                
                
                "date_published": "2019-07-15T00:00:00+02:00",
                "date_modified": "2019-07-15T00:00:00+02:00",
                
                "author":  "Hisfantor" 
                
            },
        
            {
                "title": "December 30 2018",
                "content_text": "Desktop updates:Notebook:windows fucked up my external drive  used my external drive on a friends PC under windows  after that I couldn’t even mount the drive and got the following error:  the error is kinda helpful but not really  what I did(and worked for me):  boot into windows and check the drive letter  open cmd as admin  chkdsk /F d: (d is the drive letter)  this command checks and repairs the NTFS filesystemmobile:fing ssh",
                "content_html": "<h3 id=\"desktop-updates\">Desktop updates:</h3><h3 id=\"notebook\">Notebook:</h3><h4 id=\"windows-fucked-up-my-external-drive\">windows fucked up my external drive</h4><ul>  <li>used my external drive on a friends PC under windows</li>  <li>after that I couldn’t even mount the drive and got the following error:<img src=\"https://i.imgur.com/Q1ydJzu.png\" alt=\"Error mounting filesystem\" /></li>  <li>the error is kinda helpful but not really</li>  <li>what I did(and worked for me):</li>  <li>boot into windows and check the drive letter</li>  <li>open cmd as admin</li>  <li><code class=\"highlighter-rouge\">chkdsk /F d:</code> (d is the drive letter)</li>  <li>this command checks and repairs the NTFS filesystem</li></ul><h3 id=\"mobile\">mobile:</h3><p>fing ssh</p>",
                "url": "http://0.0.0.0:4000/linux/2018/12/30/day30.html",
                
                
                "categories": ["linux"],                
                
                "tags": ["setup","NAS","december-project"],
                "date_published": "2018-12-30T00:00:00+01:00",
                "date_modified": "2018-12-30T00:00:00+01:00",
                
                "author":  "Hisfantor" 
                
            },
        
            {
                "title": "December 27 2018",
                "content_text": "Notebooknvidia drivers1  I always did it like here  but now I always get E: Unable to locate package nvidia-410  so I opend Software and Updates via cmd with sudo software-properties-gtk  first I deleted all the graphics drivers ppas in other software  but then also installed the driver via this tool in the additional drivers tab  reboot  checked for the install by opening $nvidia-settings  it schould look something like this:  or just use lsmod | grep nvidia and if you get an output the driver has sucessfully installedCPU temp2  my notebook freezes from time to time and even SysRq shortcuts won’t help  I have to look further into it but for now I installed lm-sensors  sudo apt-get install lm-sensors  start it with sudo sensors-detect accept everything with yes  run sensors to see the temps  output:hisfantor@ ~ () $ sensorscoretemp-isa-0000Adapter: ISA adapterPackage id 0:  +62.0°C  (high = +100.0°C, crit = +100.0°C)Core 0:        +51.0°C  (high = +100.0°C, crit = +100.0°C)Core 1:        +51.0°C  (high = +100.0°C, crit = +100.0°C)Core 2:        +54.0°C  (high = +100.0°C, crit = +100.0°C)Core 3:        +62.0°C  (high = +100.0°C, crit = +100.0°C)acpitz-virtual-0Adapter: Virtual devicetemp1:        +62.0°C  (crit = +105.0°C)iwlwifi-virtual-0Adapter: Virtual devicetemp1:        +42.0°C  pch_skylake-virtual-0Adapter: Virtual devicetemp1:        +45.0°C    don’t know why high and crit aren’t working properly but whateverjekyll error3  got this while testing locallyLiquid Exception: no implicit conversion of Float into String in /_layouts/post.htmljekyll 3.8.1 | Error:  no implicit conversion of Float into String  the problem was that I used the date as my post title:---layout: posttitle: 27.12published: false---  changed it to day27 and it works fineknowledge sauces:            https://launchpad.net/~graphics-drivers/+archive/ubuntu/ppa                  https://askubuntu.com/questions/15832/how-do-i-get-the-cpu-temperature                  https://github.com/jekyll/jekyll/issues/6319      ",
                "content_html": "<h3 id=\"notebook\">Notebook</h3><h4 id=\"nvidia-drivers1\">nvidia drivers<sup>1</sup></h4><ul>  <li>I always did it like <a href=\"http://www.linuxandubuntu.com/home/how-to-install-latest-nvidia-drivers-in-linux\">here</a></li>  <li>but now I always get <code class=\"highlighter-rouge\">E: Unable to locate package nvidia-410</code></li>  <li>so I opend <code class=\"highlighter-rouge\">Software and Updates</code> via cmd with <code class=\"highlighter-rouge\">sudo software-properties-gtk</code></li>  <li>first I deleted all the graphics drivers ppas in <code class=\"highlighter-rouge\">other software</code></li>  <li>but then also installed the driver via this tool in the <code class=\"highlighter-rouge\">additional drivers</code> tab</li>  <li>reboot</li>  <li>checked for the install by opening <code class=\"highlighter-rouge\">$</code><code class=\"highlighter-rouge\">nvidia-settings</code></li>  <li>it schould look something like this:<img src=\"https://i.imgur.com/RaLr3dD.png\" alt=\"nvidia settings\" /></li>  <li>or just use <code class=\"highlighter-rouge\">lsmod | grep nvidia</code> and if you get an output the driver has sucessfully installed</li></ul><h4 id=\"cpu-temp2\">CPU temp<sup>2</sup></h4><ul>  <li>my notebook freezes from time to time and even SysRq shortcuts won’t help</li>  <li>I have to look further into it but for now I installed <code class=\"highlighter-rouge\">lm-sensors</code></li>  <li><code class=\"highlighter-rouge\">sudo apt-get install lm-sensors</code></li>  <li>start it with <code class=\"highlighter-rouge\">sudo sensors-detect</code> accept everything with yes</li>  <li>run <code class=\"highlighter-rouge\">sensors</code> to see the temps</li>  <li>output:</li></ul><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>hisfantor@ ~ <span class=\"o\">()</span> <span class=\"nv\">$ </span>sensorscoretemp-isa-0000Adapter: ISA adapterPackage <span class=\"nb\">id </span>0:  +62.0°C  <span class=\"o\">(</span>high <span class=\"o\">=</span> +100.0°C, crit <span class=\"o\">=</span> +100.0°C<span class=\"o\">)</span>Core 0:        +51.0°C  <span class=\"o\">(</span>high <span class=\"o\">=</span> +100.0°C, crit <span class=\"o\">=</span> +100.0°C<span class=\"o\">)</span>Core 1:        +51.0°C  <span class=\"o\">(</span>high <span class=\"o\">=</span> +100.0°C, crit <span class=\"o\">=</span> +100.0°C<span class=\"o\">)</span>Core 2:        +54.0°C  <span class=\"o\">(</span>high <span class=\"o\">=</span> +100.0°C, crit <span class=\"o\">=</span> +100.0°C<span class=\"o\">)</span>Core 3:        +62.0°C  <span class=\"o\">(</span>high <span class=\"o\">=</span> +100.0°C, crit <span class=\"o\">=</span> +100.0°C<span class=\"o\">)</span>acpitz-virtual-0Adapter: Virtual devicetemp1:        +62.0°C  <span class=\"o\">(</span>crit <span class=\"o\">=</span> +105.0°C<span class=\"o\">)</span>iwlwifi-virtual-0Adapter: Virtual devicetemp1:        +42.0°C  pch_skylake-virtual-0Adapter: Virtual devicetemp1:        +45.0°C  </code></pre></div></div><ul>  <li>don’t know why high and crit aren’t working properly but whatever</li></ul><h4 id=\"jekyll-error3\">jekyll error<sup>3</sup></h4><ul>  <li>got this while testing locally</li></ul><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Liquid Exception: no implicit conversion of Float into String <span class=\"k\">in</span> /_layouts/post.htmljekyll 3.8.1 | Error:  no implicit conversion of Float into String</code></pre></div></div><ul>  <li>the problem was that I used the date as my post title:</li></ul><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>---layout: posttitle: 27.12published: false---</code></pre></div></div><ul>  <li>changed it to <code class=\"highlighter-rouge\">day27</code> and it works fine</li></ul><h4 id=\"knowledge-sauces\">knowledge sauces:</h4><ol>  <li>    <ul>      <li><a href=\"https://launchpad.net/~graphics-drivers/+archive/ubuntu/ppa\">https://launchpad.net/~graphics-drivers/+archive/ubuntu/ppa</a></li>    </ul>  </li>  <li>    <ul>      <li><a href=\"https://askubuntu.com/questions/15832/how-do-i-get-the-cpu-temperature\">https://askubuntu.com/questions/15832/how-do-i-get-the-cpu-temperature</a></li>    </ul>  </li>  <li>    <ul>      <li><a href=\"https://github.com/jekyll/jekyll/issues/6319\">https://github.com/jekyll/jekyll/issues/6319</a></li>    </ul>  </li></ol>",
                "url": "http://0.0.0.0:4000/linux/2018/12/27/day27.html",
                
                
                "categories": ["linux"],                
                
                "tags": ["setup","december-project","jekyll"],
                "date_published": "2018-12-27T00:00:00+01:00",
                "date_modified": "2018-12-27T00:00:00+01:00",
                
                "author":  "Hisfantor" 
                
            },
        
            {
                "title": "December 26 2018",
                "content_text": "Desktop updates:  installed:gpicview\t\t#picture viewerevince\t\t\t#pdf viewerlxappearance\t\t#gtk styling and iconpackNotebook:remounting with read write rights  I booted into windows via the external SSD and searched for a file on my second internal disk  than went back to linux and had no writing rights on this drive, the following command solved it:  sudo mount -o remount,rw '/media/hisfantor/data/'  in which /media/hisfantor/data/ is my mount pointrubiks cube  he wrote a program to simmulate a rubiks cube with variable size  the program can simulate and solve cubes up to 101x101x101 (your PC hardware is the limiting factor)  video: https://www.youtube.com/watch?v=IM2czqavlWM  code: https://github.com/Code-Bullet/RubiksCubeAI  IDE: https://processing.org/download/  L to rotate the cube with your mouse space to start/stop scrambling/solvinggit branches1$ git checkout -b [name_of_your_new_branch]$ git commit -am \"msg\"$ git push origin [name_of_your_new_branch]git prompt2  download it here and put it in a file in your home directory  ~/.git-prompt.sh  then open your ~/.bashrc and put in:source ~/.git-prompt.shexport PS1=\"\\[\\033[36m\\]\\u\\[\\033[m\\]@\\[\\033[32m\\] \\[\\033[33;1m\\]\\w\\[\\033[m\\] (\\$(git branch 2&gt;/dev/nul    l | grep '^*' | colrm 1 2)) \\$ \"  the second line will change your command-line prompt to:  [user]@ [file path] ([git branch]) $pulseaudio shortcuts3  first I recognised that pavucontrol and pulseaudio are the same thing… I thought they were different because my soundkeys stopped working when I opend pavucontrol  my old settings:bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% #increase sound volume4 bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute soundnew settings:bindsym XF86AudioRaiseVolume exec --no-startup-id amixer -D pulse sset Master 5%+ #increase sound volumebindsym XF86AudioLowerVolume exec --no-startup-id amixer -D pulse sset Master 5%- #decrease sound volumebindsym XF86AudioMute exec --no-startup-id amixer -D pulse set Master 1+ toggle # mute soundalsamixer  seems to work great (all in my ~/config/i3/config)knowledge sauces:            https://github.com/Kunena/Kunena-Forum/wiki/Create-a-new-branch-with-git-and-manage-branches                  https://qualitycoding.org/git-power-tools/      https://gist.github.com/justintv/168835                  https://askubuntu.com/questions/97936/terminal-command-to-set-audio-volume      https://askubuntu.com/questions/65764/how-do-i-toggle-sound-with-amixer      ",
                "content_html": "<h3 id=\"desktop-updates\">Desktop updates:</h3><ul>  <li>installed:</li></ul><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>gpicview\t\t<span class=\"c\">#picture viewer</span>evince\t\t\t<span class=\"c\">#pdf viewer</span>lxappearance\t\t<span class=\"c\">#gtk styling and iconpack</span></code></pre></div></div><h3 id=\"notebook\">Notebook:</h3><h4 id=\"remounting-with-read-write-rights\">remounting with read write rights</h4><ul>  <li>I booted into windows via the external SSD and searched for a file on my second internal disk</li>  <li>than went back to linux and had no writing rights on this drive, the following command solved it:</li>  <li><code class=\"highlighter-rouge\">sudo mount -o remount,rw '/media/hisfantor/data/'</code></li>  <li>in which <code class=\"highlighter-rouge\">/media/hisfantor/data/</code> is my mount point</li></ul><h4 id=\"rubiks-cube\">rubiks cube</h4><ul>  <li>he wrote a program to simmulate a rubiks cube with variable size</li>  <li>the program can simulate and solve cubes up to 101x101x101 (your PC hardware is the limiting factor)</li>  <li>video: <a href=\"https://www.youtube.com/watch?v=IM2czqavlWM\">https://www.youtube.com/watch?v=IM2czqavlWM</a></li>  <li>code: <a href=\"https://github.com/Code-Bullet/RubiksCubeAI\">https://github.com/Code-Bullet/RubiksCubeAI</a></li>  <li>IDE: <a href=\"https://processing.org/download/\">https://processing.org/download/</a></li>  <li><code class=\"highlighter-rouge\">L</code> to rotate the cube with your mouse <code class=\"highlighter-rouge\">space</code> to start/stop scrambling/solving</li></ul><h4 id=\"git-branches1\">git branches<sup>1</sup></h4><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>git checkout <span class=\"nt\">-b</span> <span class=\"o\">[</span>name_of_your_new_branch]<span class=\"nv\">$ </span>git commit <span class=\"nt\">-am</span> <span class=\"s2\">\"msg\"</span><span class=\"nv\">$ </span>git push origin <span class=\"o\">[</span>name_of_your_new_branch]</code></pre></div></div><h4 id=\"git-prompt2\">git prompt<sup>2</sup></h4><ul>  <li>download it <a href=\"https://github.com/git/git/blob/master/contrib/completion/git-prompt.sh\">here</a> and put it in a file in your home directory</li>  <li><code class=\"highlighter-rouge\">~/.git-prompt.sh</code></li>  <li>then open your <code class=\"highlighter-rouge\">~/.bashrc</code> and put in:</li></ul><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">source</span> ~/.git-prompt.sh<span class=\"nb\">export </span><span class=\"nv\">PS1</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"se\">\\[\\0</span><span class=\"s2\">33[36m</span><span class=\"se\">\\]\\u\\[\\0</span><span class=\"s2\">33[m</span><span class=\"se\">\\]</span><span class=\"s2\">@</span><span class=\"se\">\\[\\0</span><span class=\"s2\">33[32m</span><span class=\"se\">\\]</span><span class=\"s2\"> </span><span class=\"se\">\\[\\0</span><span class=\"s2\">33[33;1m</span><span class=\"se\">\\]\\w\\[\\0</span><span class=\"s2\">33[m</span><span class=\"se\">\\]</span><span class=\"s2\"> (</span><span class=\"se\">\\$</span><span class=\"s2\">(git branch 2&gt;/dev/nul    l | grep '^*' | colrm 1 2)) </span><span class=\"se\">\\$</span><span class=\"s2\"> \"</span></code></pre></div></div><ul>  <li>the second line will change your command-line prompt to:</li>  <li><code class=\"highlighter-rouge\">[user]@ [file path] ([git branch]) $</code></li></ul><h4 id=\"pulseaudio-shortcuts3\">pulseaudio shortcuts<sup>3</sup></h4><ul>  <li>first I recognised that pavucontrol and pulseaudio are the same thing… I thought they were different because my soundkeys stopped working when I opend pavucontrol</li>  <li>my old settings:</li></ul><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>bindsym XF86AudioRaiseVolume <span class=\"nb\">exec</span> <span class=\"nt\">--no-startup-id</span> pactl set-sink-volume 0 +5% <span class=\"c\">#increase sound volume4 </span>bindsym XF86AudioLowerVolume <span class=\"nb\">exec</span> <span class=\"nt\">--no-startup-id</span> pactl set-sink-volume 0 <span class=\"nt\">-5</span>% <span class=\"c\">#decrease sound volume </span>bindsym XF86AudioMute <span class=\"nb\">exec</span> <span class=\"nt\">--no-startup-id</span> pactl set-sink-mute 0 toggle <span class=\"c\"># mute sound</span></code></pre></div></div><p>new settings:</p><div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>bindsym XF86AudioRaiseVolume <span class=\"nb\">exec</span> <span class=\"nt\">--no-startup-id</span> amixer <span class=\"nt\">-D</span> pulse sset Master 5%+ <span class=\"c\">#increase sound volume</span>bindsym XF86AudioLowerVolume <span class=\"nb\">exec</span> <span class=\"nt\">--no-startup-id</span> amixer <span class=\"nt\">-D</span> pulse sset Master 5%- <span class=\"c\">#decrease sound volume</span>bindsym XF86AudioMute <span class=\"nb\">exec</span> <span class=\"nt\">--no-startup-id</span> amixer <span class=\"nt\">-D</span> pulse <span class=\"nb\">set </span>Master 1+ toggle <span class=\"c\"># mute sound</span></code></pre></div></div><p><code class=\"highlighter-rouge\">alsamixer</code></p><ul>  <li>seems to work great (all in my <code class=\"highlighter-rouge\">~/config/i3/config</code>)</li></ul><h4 id=\"knowledge-sauces\">knowledge sauces:</h4><ol>  <li>    <ul>      <li><a href=\"https://github.com/Kunena/Kunena-Forum/wiki/Create-a-new-branch-with-git-and-manage-branches\">https://github.com/Kunena/Kunena-Forum/wiki/Create-a-new-branch-with-git-and-manage-branches</a></li>    </ul>  </li>  <li>    <ul>      <li><a href=\"https://qualitycoding.org/git-power-tools/\">https://qualitycoding.org/git-power-tools/</a></li>      <li><a href=\"https://gist.github.com/justintv/168835\">https://gist.github.com/justintv/168835</a></li>    </ul>  </li>  <li>    <ul>      <li><a href=\"https://askubuntu.com/questions/97936/terminal-command-to-set-audio-volume\">https://askubuntu.com/questions/97936/terminal-command-to-set-audio-volume</a></li>      <li><a href=\"https://askubuntu.com/questions/65764/how-do-i-toggle-sound-with-amixer\">https://askubuntu.com/questions/65764/how-do-i-toggle-sound-with-amixer</a></li>    </ul>  </li></ol>",
                "url": "http://0.0.0.0:4000/linux/2018/12/26/updates.html",
                
                
                "categories": ["linux"],                
                
                "tags": ["setup","software","december-project","git"],
                "date_published": "2018-12-26T00:00:00+01:00",
                "date_modified": "2018-12-26T00:00:00+01:00",
                
                "author":  "Hisfantor" 
                
            },
        
            {
                "title": "December 05 2018",
                "content_text": "PC stuff:Desktop updates:  I started using the latest Ubuntu server version in the attempt to build a slim OS to use on any system  I use I3 as my window manager  but ince then I ecperienced some random crashes and freezes and the beautiful “Aw, Snap! Something went wrong…” in chromium, not sure whyBlog:  jekyll s --unpublished or jekyll s -u  just to run the jekyll server with unpublished posts includedNotebook:  ocamlfuse fucks with me and I have to remount it after each rebootboot via external SSD:  I used an PCB of an external HDD( which I took apart to place the HDD in my Desktop) and put my old SSD in  connected it to power and via USB(3.0)  went into my BIOS(pressing F2 at startup) and enabled USB boot (boot mode: legacy)  restart and into the bootmenu(pressing F12) choose the external disk(under USB)  it booted right into the UEFI menu with options for Ubuntu and Windows  since I tested this to use windows without having it on the main PC drives I started ithad to update the graphics drivers:  uninstalled everything nvida related  reboot  got the lates drivers for my mx150 from nvidias website  ran the installer  reboot  everything fine, card is recognised in the device and task manager(same with CPU, all disks and wifi card)Raspberry plesure:Pi Calendar:  I checked out this video to learn about sprite collision detection in python to work on day4  so I started using pygame as well  it’s already working but I want to make it nicePi Zero:  first setup ever  I found a micro to mini USB which allowed me to connect my keyboard(otherwise I wouldn’t had been able to communicate with the Pi zero thanks to his inconvinient micro usb port placement)  only thing to mention with the setup is that you have to press space to check a box in the setupSSH:on the Pi(host):  open terminal Ctrl + Alt + T  sudo systemctl enable ssh  sudo systemctl start sshon your PC(client):  ssh pi@raspberrypi.local  because we haven’t changed the pi’s name there will be a warning like:@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       WARNING: POSSIBLE DNS SPOOFING DETECTED!          @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@The ECDSA host key for raspberrypi.local has changed,and the key for the corresponding IP address 192.168.0.200is unknown. This could either mean thatDNS SPOOFING is happening or the IP address for the hostand its host key have changed at the same time.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!Someone could be eavesdropping on you right now (man-in-the-middle attack)!It is also possible that a host key has just been changed.The fingerprint for the ECDSA key sent by the remote host isSHA256:5FuzlLJo30I3uGNK1uRcieL4H776KeWzmz3aNyrzzDk.Please contact your system administrator.Add correct host key in /home/hisfantor/.ssh/known_hosts to get rid of this message.Offending ECDSA key in /home/hisfantor/.ssh/known_hosts:17  remove with:  ssh-keygen -f \"/home/hisfantor/.ssh/known_hosts\" -R \"raspberrypi.local\"ECDSA host key for raspberrypi.local has changed and you have requested strict checking.Host key verification failed.  so just do what it tells you ssh-keygen -f \"/home/hisfantor/.ssh/known_hosts\" -R \"raspberrypi.local\"  then SSH again and type in the password which I have chosen while setting up the Pi",
                "content_html": "<h2 id=\"pc-stuff\">PC stuff:</h2><h3 id=\"desktop-updates\">Desktop updates:</h3><ul>  <li>I started using the latest Ubuntu server version in the attempt to build a slim OS to use on any system</li>  <li>I use I3 as my window manager</li>  <li>but ince then I ecperienced some random crashes and freezes and the beautiful “Aw, Snap! Something went wrong…” in chromium, not sure why</li></ul><h4 id=\"blog\">Blog:</h4><ul>  <li><code class=\"highlighter-rouge\">jekyll s --unpublished</code> or <code class=\"highlighter-rouge\">jekyll s -u</code></li>  <li>just to run the jekyll server with unpublished posts included</li></ul><h3 id=\"notebook\">Notebook:</h3><ul>  <li>ocamlfuse fucks with me and I have to remount it after each reboot</li></ul><h4 id=\"boot-via-external-ssd\">boot via external SSD:</h4><ul>  <li>I used an PCB of an external HDD( which I took apart to place the HDD in my Desktop) and put my old SSD in</li>  <li>connected it to power and via USB(3.0)</li>  <li>went into my BIOS(pressing F2 at startup) and enabled USB boot (boot mode: legacy)</li>  <li>restart and into the bootmenu(pressing F12) choose the external disk(under USB)</li>  <li>it booted right into the UEFI menu with options for Ubuntu and Windows</li>  <li>since I tested this to use windows without having it on the main PC drives I started it</li></ul><h4 id=\"had-to-update-the-graphics-drivers\">had to update the graphics drivers:</h4><ul>  <li>uninstalled everything nvida related</li>  <li>reboot</li>  <li>got the lates drivers for my mx150 from nvidias website</li>  <li>ran the installer</li>  <li>reboot</li>  <li>everything fine, card is recognised in the device and task manager(same with CPU, all disks and wifi card)</li></ul><hr /><h2 id=\"raspberry-plesure\">Raspberry plesure:</h2><h3 id=\"pi-calendar\">Pi Calendar:</h3><ul>  <li>I checked out <a href=\"https://www.youtube.com/watch?v=Idu8XfwKUao\">this video</a> to learn about sprite collision detection in python to work on day4</li>  <li>so I started using pygame as well</li>  <li>it’s already working but I want to make it nice</li></ul><h3 id=\"pi-zero\">Pi Zero:</h3><ul>  <li>first setup ever</li>  <li>I found a micro to mini USB which allowed me to connect my keyboard(otherwise I wouldn’t had been able to communicate with the Pi zero thanks to his inconvinient micro usb port placement)</li>  <li>only thing to mention with the setup is that you have to press <code class=\"highlighter-rouge\">space</code> to check a box in the setup</li></ul><h4 id=\"ssh\">SSH:</h4><h4 id=\"on-the-pihost\">on the Pi(host):</h4><ul>  <li>open terminal <code class=\"highlighter-rouge\">Ctrl + Alt + T</code></li>  <li><code class=\"highlighter-rouge\">sudo systemctl enable ssh</code></li>  <li><code class=\"highlighter-rouge\">sudo systemctl start ssh</code></li></ul><h4 id=\"on-your-pcclient\">on your PC(client):</h4><ul>  <li><code class=\"highlighter-rouge\">ssh pi@raspberrypi.local</code></li>  <li>because we haven’t changed the pi’s name there will be a warning like:</li></ul><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       WARNING: POSSIBLE DNS SPOOFING DETECTED!          @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@The ECDSA host key for raspberrypi.local has changed,and the key for the corresponding IP address 192.168.0.200is unknown. This could either mean thatDNS SPOOFING is happening or the IP address for the hostand its host key have changed at the same time.@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!Someone could be eavesdropping on you right now (man-in-the-middle attack)!It is also possible that a host key has just been changed.The fingerprint for the ECDSA key sent by the remote host isSHA256:5FuzlLJo30I3uGNK1uRcieL4H776KeWzmz3aNyrzzDk.Please contact your system administrator.Add correct host key in /home/hisfantor/.ssh/known_hosts to get rid of this message.Offending ECDSA key in /home/hisfantor/.ssh/known_hosts:17  remove with:  ssh-keygen -f \"/home/hisfantor/.ssh/known_hosts\" -R \"raspberrypi.local\"ECDSA host key for raspberrypi.local has changed and you have requested strict checking.Host key verification failed.</code></pre></div></div><ul>  <li>so just do what it tells you <code class=\"highlighter-rouge\">ssh-keygen -f \"/home/hisfantor/.ssh/known_hosts\" -R \"raspberrypi.local\"</code></li>  <li>then SSH again and type in the password which I have chosen while setting up the Pi</li></ul>",
                "url": "http://0.0.0.0:4000/linux/raspberry/2018/12/05/day5.html",
                
                
                "categories": ["linux","raspberry"],                
                
                "tags": ["setup","december-project","python"],
                "date_published": "2018-12-05T00:00:00+01:00",
                "date_modified": "2018-12-05T00:00:00+01:00",
                
                "author":  "Hisfantor" 
                
            },
        
            {
                "title": "December 04 2018",
                "content_text": "Desktop updates:  added some characters from the german keyboard layout that I’m missing using the american one so I created the file .Xmodmap in the home directory    keycode 108 = Mode_switch Multi_keykeycode 38 = a A adiaeresis Adiaeresiskeycode 39 = s S ssharp ssharpkeycode 30 = u U udiaeresis Udiaeresiskeycode 32 = o O odiaeresis Odiaeresiskeycode 49 = asciitilde grave degree keycode 11 = 2 at twosuperiorkeycode 12 = 3 numbersign threesuperiorkeycode 26 = e E EuroSignkeycode 27 = r R registeredkeycode 21 = equal plus plusminus        to activat it just run xmodmap ~/.Xmodmap  I wrote this file innitially for my notebook but it works great on my custoum mechanical keyboard as wellPi Calendar:  Mission is to do it all with python from now on, but now the introduced graphics so let’s see  first I had to install graphics.py I got the code from here and placed the file in /usr/lib/python3/dist-packages  also had to install Tkinter via sudo apt-get install python3-tk  installed pygame with this instructions  drew an image and a box but I cant check these for collision so I have to change to sprites tomorrow",
                "content_html": "<h3 id=\"desktop-updates\">Desktop updates:</h3><ul>  <li>added some characters from the german keyboard layout that I’m missing using the american one so I created the file <code class=\"highlighter-rouge\">.Xmodmap</code> in the home directory    <div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>keycode 108 = Mode_switch Multi_keykeycode 38 = a A adiaeresis Adiaeresiskeycode 39 = s S ssharp ssharpkeycode 30 = u U udiaeresis Udiaeresiskeycode 32 = o O odiaeresis Odiaeresiskeycode 49 = asciitilde grave degree keycode 11 = 2 at twosuperiorkeycode 12 = 3 numbersign threesuperiorkeycode 26 = e E EuroSignkeycode 27 = r R registeredkeycode 21 = equal plus plusminus</code></pre></div>    </div>  </li>  <li>to activat it just run <code class=\"highlighter-rouge\">xmodmap ~/.Xmodmap</code></li>  <li>I wrote this file innitially for my notebook but it works great on my custoum mechanical keyboard as well</li></ul><h3 id=\"pi-calendar\">Pi Calendar:</h3><ul>  <li>Mission is to do it all with python from now on, but now the introduced graphics so let’s see</li>  <li>first I had to install <code class=\"highlighter-rouge\">graphics.py</code> I got the code from <a href=\"http://mcsp.wartburg.edu/zelle/python/graphics.py\">here</a> and placed the file in <code class=\"highlighter-rouge\">/usr/lib/python3/dist-packages</code></li>  <li>also had to install Tkinter via <code class=\"highlighter-rouge\">sudo apt-get install python3-tk</code></li>  <li>installed <code class=\"highlighter-rouge\">pygame</code> with <a href=\"https://www.pygame.org/wiki/CompileUbuntu?parent=\">this</a> instructions</li>  <li>drew an image and a box but I cant check these for collision so I have to change to sprites tomorrow</li></ul>",
                "url": "http://0.0.0.0:4000/linux/raspberry/2018/12/04/day4.html",
                
                
                "categories": ["linux","raspberry"],                
                
                "tags": ["setup","electrinics","december-project","python"],
                "date_published": "2018-12-04T00:00:00+01:00",
                "date_modified": "2018-12-04T00:00:00+01:00",
                
                "author":  "Hisfantor" 
                
            },
        
            {
                "title": "December 03 2018",
                "content_text": "Desktop updates:  installed a video player sudo apt install mvp  installed a disk manager via audo apt install gnome-disk-utility which can be opened via gnome-disks          fuck this, formated the 6TB drive to ext4 via gparted and mounted it in /home/hisfantor/internal      gave me all rights on the disk via sudo chmod 777 /home/hisfantor/internal      started transfer of 1.1TB of movies, with a current write speed of 73MB/s      Workshop PC:  checked Solidworks instalation -&gt; all good for nowNotebook:  I used my google drive via a server connection in nautilus, but I couldn’t live edit an html file so I wanted to use google-drive-ocamlfuse  had some trouble installing it the usual way like described here  I found the ppa on here and downloaded the .deb manually  then installed it via sudo dpkg -i /path/to/deb/file &amp;&amp; sudo apt-get install -f  also included exec_always google-drive-ocamlfuse ~/googledrive in my i3 configPi Calendar:  introduction of a second led and loop functions  I had enough of the visual programing in Sketch and switched to python on the commandline  make sure you have python-rpi.gpio installedimport RPi.GPIO as GPIO \t\t#improting the GPIO functionsimport time\t\t\t\t\t\t#time for pauses between stepsGPIO.setmode(GPIO.BCM)\t\t\t#that's the method how to assign the pinsGPIO.setup(24, GPIO.OUT)\t\t# use the pins as outGPIO.setup(18, GPIO.OUT)\t\t#I used the same pins as the calendart = 0.5 \t\t\t\t\t\t#varable for timing(t in s)def dot():\t\t\t\t\t# I used the two LEDs to make a little morse code# dot/short is the first LED\tGPIO.output(24, GPIO.HIGH)\t\ttime.sleep(t)\tGPIO.output(24, GPIO.LOW)\ttime.sleep(t)def dash():\t\t\t\t\t\t#dash/long is the second LED\tGPIO.output(18, GPIO.HIGH)\ttime.sleep(t)\tGPIO.output(18, GPIO.LOW)\ttime.sleep(t)def stop():\t\t\t\t\t\t#in between letters both LEDs light up\tGPIO.output(24, GPIO.HIGH)\tGPIO.output(18, GPIO.HIGH)\ttime.sleep(t)\tGPIO.output(24, GPIO.LOW)\tGPIO.output(18, GPIO.LOW)\ttime.sleep(t)dot()dash()dot()dash()stop()dot()dot()stop()dot()stop()#...GPIO.cleanup()\t\t\t\t\t#stes back all the GPIO settings and turns everything off  that’s my first code in Python ever and I really like it, its conda confusing that a function block is defined by tabs and not curly brackets  also it’s awesome experimenting with the GPIO pins, all the potential it brings to the table!",
                "content_html": "<h3 id=\"desktop-updates\">Desktop updates:</h3><ul>  <li>installed a video player <code class=\"highlighter-rouge\">sudo apt install mvp</code></li>  <li>installed a disk manager via <code class=\"highlighter-rouge\">audo apt install gnome-disk-utility</code> which can be opened via <code class=\"highlighter-rouge\">gnome-disks</code>    <ul>      <li>fuck this, formated the 6TB drive to ext4 via gparted and mounted it in <code class=\"highlighter-rouge\">/home/hisfantor/internal</code></li>      <li>gave me all rights on the disk via <code class=\"highlighter-rouge\">sudo chmod 777 /home/hisfantor/internal</code></li>      <li>started transfer of 1.1TB of movies, with a current write speed of 73MB/s</li>    </ul>  </li></ul><h4 id=\"workshop-pc\">Workshop PC:</h4><ul>  <li>checked Solidworks instalation -&gt; all good for now</li></ul><h4 id=\"notebook\">Notebook:</h4><ul>  <li>I used my google drive via a server connection in nautilus, but I couldn’t live edit an html file so I wanted to use <code class=\"highlighter-rouge\">google-drive-ocamlfuse</code></li>  <li>had some trouble installing it the usual way like described <a href=\"https://www.omgubuntu.co.uk/2017/04/mount-google-drive-ocamlfuse-linux\">here</a></li>  <li>I found the ppa on <a href=\"https://launchpad.net/~alessandro-strada/+archive/ubuntu/google-drive-ocamlfuse-beta/+build/15331130\">here</a> and downloaded the .deb manually</li>  <li>then installed it via <code class=\"highlighter-rouge\">sudo dpkg -i /path/to/deb/file &amp;&amp; sudo apt-get install -f</code></li>  <li>also included <code class=\"highlighter-rouge\">exec_always google-drive-ocamlfuse ~/googledrive</code> in my i3 config</li></ul><h3 id=\"pi-calendar\">Pi Calendar:</h3><ul>  <li>introduction of a second led and loop functions</li>  <li>I had enough of the visual programing in Sketch and switched to python on the commandline</li>  <li>make sure you have <code class=\"highlighter-rouge\">python-rpi.gpio</code> installed</li></ul><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">import</span> <span class=\"nn\">RPi.GPIO</span> <span class=\"k\">as</span> <span class=\"n\">GPIO</span> \t\t<span class=\"c1\">#improting the GPIO functions</span><span class=\"kn\">import</span> <span class=\"nn\">time</span>\t\t\t\t\t\t<span class=\"c1\">#time for pauses between steps</span><span class=\"n\">GPIO</span><span class=\"o\">.</span><span class=\"n\">setmode</span><span class=\"p\">(</span><span class=\"n\">GPIO</span><span class=\"o\">.</span><span class=\"n\">BCM</span><span class=\"p\">)</span>\t\t\t<span class=\"c1\">#that's the method how to assign the pins</span><span class=\"n\">GPIO</span><span class=\"o\">.</span><span class=\"n\">setup</span><span class=\"p\">(</span><span class=\"mi\">24</span><span class=\"p\">,</span> <span class=\"n\">GPIO</span><span class=\"o\">.</span><span class=\"n\">OUT</span><span class=\"p\">)</span>\t\t<span class=\"c1\"># use the pins as out</span><span class=\"n\">GPIO</span><span class=\"o\">.</span><span class=\"n\">setup</span><span class=\"p\">(</span><span class=\"mi\">18</span><span class=\"p\">,</span> <span class=\"n\">GPIO</span><span class=\"o\">.</span><span class=\"n\">OUT</span><span class=\"p\">)</span>\t\t<span class=\"c1\">#I used the same pins as the calendar</span><span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span> \t\t\t\t\t\t<span class=\"c1\">#varable for timing(t in s)</span><span class=\"k\">def</span> <span class=\"nf\">dot</span><span class=\"p\">():</span>\t\t\t\t\t<span class=\"c1\"># I used the two LEDs to make a little morse code# dot/short is the first LED</span>\t<span class=\"n\">GPIO</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">(</span><span class=\"mi\">24</span><span class=\"p\">,</span> <span class=\"n\">GPIO</span><span class=\"o\">.</span><span class=\"n\">HIGH</span><span class=\"p\">)</span>\t\t<span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\t<span class=\"n\">GPIO</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">(</span><span class=\"mi\">24</span><span class=\"p\">,</span> <span class=\"n\">GPIO</span><span class=\"o\">.</span><span class=\"n\">LOW</span><span class=\"p\">)</span>\t<span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span><span class=\"k\">def</span> <span class=\"nf\">dash</span><span class=\"p\">():</span>\t\t\t\t\t\t<span class=\"c1\">#dash/long is the second LED</span>\t<span class=\"n\">GPIO</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">(</span><span class=\"mi\">18</span><span class=\"p\">,</span> <span class=\"n\">GPIO</span><span class=\"o\">.</span><span class=\"n\">HIGH</span><span class=\"p\">)</span>\t<span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\t<span class=\"n\">GPIO</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">(</span><span class=\"mi\">18</span><span class=\"p\">,</span> <span class=\"n\">GPIO</span><span class=\"o\">.</span><span class=\"n\">LOW</span><span class=\"p\">)</span>\t<span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span><span class=\"k\">def</span> <span class=\"nf\">stop</span><span class=\"p\">():</span>\t\t\t\t\t\t<span class=\"c1\">#in between letters both LEDs light up</span>\t<span class=\"n\">GPIO</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">(</span><span class=\"mi\">24</span><span class=\"p\">,</span> <span class=\"n\">GPIO</span><span class=\"o\">.</span><span class=\"n\">HIGH</span><span class=\"p\">)</span>\t<span class=\"n\">GPIO</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">(</span><span class=\"mi\">18</span><span class=\"p\">,</span> <span class=\"n\">GPIO</span><span class=\"o\">.</span><span class=\"n\">HIGH</span><span class=\"p\">)</span>\t<span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\t<span class=\"n\">GPIO</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">(</span><span class=\"mi\">24</span><span class=\"p\">,</span> <span class=\"n\">GPIO</span><span class=\"o\">.</span><span class=\"n\">LOW</span><span class=\"p\">)</span>\t<span class=\"n\">GPIO</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">(</span><span class=\"mi\">18</span><span class=\"p\">,</span> <span class=\"n\">GPIO</span><span class=\"o\">.</span><span class=\"n\">LOW</span><span class=\"p\">)</span>\t<span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span><span class=\"n\">dot</span><span class=\"p\">()</span><span class=\"n\">dash</span><span class=\"p\">()</span><span class=\"n\">dot</span><span class=\"p\">()</span><span class=\"n\">dash</span><span class=\"p\">()</span><span class=\"n\">stop</span><span class=\"p\">()</span><span class=\"n\">dot</span><span class=\"p\">()</span><span class=\"n\">dot</span><span class=\"p\">()</span><span class=\"n\">stop</span><span class=\"p\">()</span><span class=\"n\">dot</span><span class=\"p\">()</span><span class=\"n\">stop</span><span class=\"p\">()</span><span class=\"c1\">#...</span><span class=\"n\">GPIO</span><span class=\"o\">.</span><span class=\"n\">cleanup</span><span class=\"p\">()</span>\t\t\t\t\t<span class=\"c1\">#stes back all the GPIO settings and turns everything off</span></code></pre></div></div><ul>  <li>that’s my first code in Python ever and I really like it, its conda confusing that a function block is defined by tabs and not curly brackets</li>  <li>also it’s awesome experimenting with the GPIO pins, all the potential it brings to the table!</li></ul>",
                "url": "http://0.0.0.0:4000/linux/raspberry/2018/12/03/day3.html",
                
                
                "categories": ["linux","raspberry"],                
                
                "tags": ["setup","electrinics","python"],
                "date_published": "2018-12-03T00:00:00+01:00",
                "date_modified": "2018-12-03T00:00:00+01:00",
                
                "author":  "Hisfantor" 
                
            },
        
            {
                "title": "December 02 2018",
                "content_text": "Desktop updates:  uploaded day1 and made some tweaks to older posts, trying to figure out the problem with the tables          do to all the testing I use git add -A &amp;&amp; git commit -m 'day one8' &amp;&amp; git push to create posts in one line, the &amp;&amp; waits for the first command to finish      my mistake was that I didn’t hat a free line between the header and the table…      fucked up the backup from yesterday so I had to start over again…      Pi Calendar  connected the red LED to pins 6(gnd) and 12(GPIO18)  Started the preinstalled program Sctretch  opened the file 02led02  tweked the delay, added an other blink and a delay in between  run the program with the green flag in the top right corner",
                "content_html": "<h3 id=\"desktop-updates\">Desktop updates:</h3><ul>  <li>uploaded day1 and made some tweaks to older posts, trying to figure out the problem with the tables    <ul>      <li>do to all the testing I use <code class=\"highlighter-rouge\">git add -A &amp;&amp; git commit -m 'day one8' &amp;&amp; git push</code> to create posts in one line, the <code class=\"highlighter-rouge\">&amp;&amp;</code> waits for the first command to finish</li>      <li>my mistake was that I didn’t hat a free line between the header and the table…</li>      <li>fucked up the backup from yesterday so I had to start over again…</li>    </ul>  </li></ul><h3 id=\"pi-calendar\">Pi Calendar</h3><ul>  <li>connected the red LED to pins 6(gnd) and 12(GPIO18)</li>  <li>Started the preinstalled program Sctretch</li>  <li>opened the file 02led02</li>  <li>tweked the delay, added an other blink and a delay in between</li>  <li>run the program with the green flag in the top right corner</li></ul>",
                "url": "http://0.0.0.0:4000/linux/raspberry/2018/12/02/day2.html",
                
                
                "categories": ["linux","raspberry"],                
                
                "tags": ["setup","git","december-project"],
                "date_published": "2018-12-02T00:00:00+01:00",
                "date_modified": "2018-12-02T00:00:00+01:00",
                
                "author":  "Hisfantor" 
                
            },
        
            {
                "title": "December 01 2018",
                "content_text": "Desktop updates:  installed spotify with: sudo snap install spotify  Trying to install nvidia drivers… freeze while rebooting          while booting enter GRUB with Ctrl+Alt+Del                  or F12 to get into bootorder and chose UEF                    Advanced options -&gt; Recovery mode -&gt; root      might have to remount filesystem first mount -o rw,remount /      delete the drivers with apt purge nvidia*      reboot        copiing files from old SSD to External 4TB (and started full backup on 6TB drive)          sudo fdisk -l to show all drives      mkdir /home/&lt;username&gt;/&lt;folder for drive&gt; to create a folder to mount to      sudo mount -t ntfs /dev/&lt;partition name&gt; /home/&lt;username&gt;/&lt;folder for drive&gt;      sudo umount /dev/&lt;partition name&gt; unmount drive if you need it      Pi Calendar  installation of Raspbian          SSD full -&gt; format usb to get stuff of with gnome-disks      or just fucking use your notebook to download the OS      make bootable USB with usb-creator-gtk        updates(automatically) and I installed nautilus  downloaded files from http://bit.ly/c-adventskalender-raspberry-pi-18  could’t find the right resistor so I used a red LED wich actually uses 3.3V  held it up to the pins (1(3.3V) and 6(gnd)) and it glows, yey",
                "content_html": "<h3 id=\"desktop-updates\">Desktop updates:</h3><ul>  <li>installed spotify with: <code class=\"highlighter-rouge\">sudo snap install spotify</code></li>  <li>Trying to install nvidia drivers… freeze while rebooting    <ul>      <li>while booting enter GRUB with <code class=\"highlighter-rouge\">Ctrl</code>+<code class=\"highlighter-rouge\">Alt</code>+<code class=\"highlighter-rouge\">Del</code>        <ul>          <li>or <code class=\"highlighter-rouge\">F12</code> to get into bootorder and chose UEF</li>        </ul>      </li>      <li>Advanced options -&gt; Recovery mode -&gt; root</li>      <li>might have to remount filesystem first <code class=\"highlighter-rouge\">mount -o rw,remount /</code></li>      <li>delete the drivers with <code class=\"highlighter-rouge\">apt purge nvidia*</code></li>      <li><code class=\"highlighter-rouge\">reboot</code></li>    </ul>  </li>  <li>copiing files from old SSD to External 4TB (and started full backup on 6TB drive)    <ul>      <li><code class=\"highlighter-rouge\">sudo fdisk -l</code> to show all drives</li>      <li><code class=\"highlighter-rouge\">mkdir /home/&lt;username&gt;/&lt;folder for drive&gt;</code> to create a folder to mount to</li>      <li><code class=\"highlighter-rouge\">sudo mount -t ntfs /dev/&lt;partition name&gt; /home/&lt;username&gt;/&lt;folder for drive&gt;</code></li>      <li><code class=\"highlighter-rouge\">sudo umount /dev/&lt;partition name&gt;</code> unmount drive if you need it</li>    </ul>  </li></ul><h3 id=\"pi-calendar\">Pi Calendar</h3><ul>  <li>installation of Raspbian    <ul>      <li>SSD full -&gt; format usb to get stuff of with <code class=\"highlighter-rouge\">gnome-disks</code></li>      <li>or just fucking use your notebook to download the OS</li>      <li>make bootable USB with <code class=\"highlighter-rouge\">usb-creator-gtk</code></li>    </ul>  </li>  <li>updates(automatically) and I installed <code class=\"highlighter-rouge\">nautilus</code></li>  <li>downloaded files from http://bit.ly/c-adventskalender-raspberry-pi-18</li>  <li>could’t find the right resistor so I used a red LED wich actually uses 3.3V</li>  <li>held it up to the pins (1(3.3V) and 6(gnd)) and it glows, yey</li></ul>",
                "url": "http://0.0.0.0:4000/linux/raspberry/2018/12/01/day1.html",
                
                
                "categories": ["linux","raspberry"],                
                
                "tags": ["setup","drivers","electrinics","december-project"],
                "date_published": "2018-12-01T00:00:00+01:00",
                "date_modified": "2018-12-01T00:00:00+01:00",
                
                "author":  "Hisfantor" 
                
            },
        
            {
                "title": "some Podcasts",
                "content_text": "Podcasts:            category      name      rss      website                  making                                          The Board      rss      link                     Board Makers      rss      link                     Knife Talk      rss      link                     Making It      rss      link                     Welding Tips and Tricks      rss      link              movie/show                                          Back to the Future Minute      rss      link                     Decoding Westworld      rss      link                     Interdimensional rss      rss      link                     The Maze      rss      link                     Show Me The Meaning      rss      link                     The Squanch      rss      link              videogames                                          Electronic Wireless Show      rss      link                     Giant Bombcast      rss      link                     Hello Internet      rss      link                     Idle Thumbs      rss      link                     The Indoor Kids      rss      link                     Roguelike Radio      rss      link                     Super Joysick Radio      rss      link                     Videogames Hot Dog      rss      link                     Watch Out For Fireballs      rss      link              music                                          Legacy Music Hour      rss      link              linux                                          Linux Outlaws      rss      link              others                                          Advice Hot Dog      rss      link                     Containers      rss      link                     Rabbits      rss      link                     Stuff You Should Know      rss      link                     Under The Hood      rss      link                     Walking Up with Sam Harris      rss      link                     WTF with Marc Maron      rss      link                     You Must Remember This      rss      link              finished                                          The Biggest Problem in the Universe      rss      link                     Game of Thrones von Serienjunkies.de      rss      link      Android apps:            app      gpodder                  podax      Subscription sync              AntennaPod      login but no sync so far              listen up free      login but no sync so far              SoundWaves                     Podcast Tunes      sync in progress              PodcastBox - Podcast Player      only gpodder search, no sync              Omni Podcast      only search and top podcasts, no sync              CastMic Podcast Player: Free radio podcatcher      sync startet              Simple Podcatcher      start sync              Jpodcasts      sync startet              Podder      sync startet              Podcatcher Deluxe      2€      Linux clients:  gpodderOthers:  rhythmbox",
                "content_html": "<style>\ttable {  padding: 0; }  table tr {    border-top: 1px solid #cccccc;    background-color: white;    margin: 0;    padding: 0; }    table tr:nth-child(2n) {      background-color: #f8f8f8; }    table tr th {      font-weight: bold;      border: 1px solid #cccccc;      text-align: left;      margin: 0;      padding: 6px 13px; }    table tr td {      border: 1px solid #cccccc;      text-align: left;      margin: 0;      padding: 6px 13px; }    table tr th :first-child, table tr td :first-child {      margin-top: 0; }    table tr th :last-child, table tr td :last-child {      margin-bottom: 0; }</style><h2 id=\"podcasts\">Podcasts:</h2><table>  <thead>    <tr>      <th>category</th>      <th>name</th>      <th>rss</th>      <th>website</th>    </tr>  </thead>  <tbody>    <tr>      <td><strong>making</strong></td>      <td> </td>      <td> </td>      <td> </td>    </tr>    <tr>      <td> </td>      <td>The Board</td>      <td><a href=\"https://theboard.libsyn.com/rss\">rss</a></td>      <td><a href=\"http://theboard.libsyn.com/\">link</a></td>    </tr>    <tr>      <td> </td>      <td>Board Makers</td>      <td><a href=\"https://feeds.soundcloud.com/users/soundcloud%3Ausers%3A158783346/sounds.rss\">rss</a></td>      <td><a href=\"https://soundcloud.com/board-makers\">link</a></td>    </tr>    <tr>      <td> </td>      <td>Knife Talk</td>      <td><a href=\"https://rss.simplecast.com/podcasts/2810/rss\">rss</a></td>      <td><a href=\"http://knifetalk.net/\">link</a></td>    </tr>    <tr>      <td> </td>      <td>Making It</td>      <td><a href=\"https://feeds.soundcloud.com/users/soundcloud%3Ausers%3A144818784/sounds.rss\">rss</a></td>      <td><a href=\"http://makingitpodcast.com/\">link</a></td>    </tr>    <tr>      <td> </td>      <td>Welding Tips and Tricks</td>      <td><a href=\"https://wttpodcast.libsyn.com/rss\">rss</a></td>      <td><a href=\"https://wttpodcast.libsyn.com/\">link</a></td>    </tr>    <tr>      <td><strong>movie/show</strong></td>      <td> </td>      <td> </td>      <td> </td>    </tr>    <tr>      <td> </td>      <td>Back to the Future Minute</td>      <td><a href=\"http://www.backtothefutureminute.com/feed/\">rss</a></td>      <td><a href=\"http://www.backtothefutureminute.com/category/podcasts/back-to-the-future-minute/\">link</a></td>    </tr>    <tr>      <td> </td>      <td>Decoding Westworld</td>      <td><a href=\"https://feeds.soundcloud.com/users/soundcloud:users:259871793/sounds.rss\">rss</a></td>      <td><a href=\"https://soundcloud.com/decodingwestworld\">link</a></td>    </tr>    <tr>      <td> </td>      <td>Interdimensional rss</td>      <td><a href=\"https://feeds.soundcloud.com/users/soundcloud%3Ausers%3A37793930/sounds.rs://www.apatheticenthusiasm.com/feed/rickandmortypodcast/\">rss</a></td>      <td><a href=\"https://www.apatheticenthusiasm.com/rickandmortypodcast-2/\">link</a></td>    </tr>    <tr>      <td> </td>      <td>The Maze</td>      <td><a href=\"https://feeds.soundcloud.com/users/soundcloud:users:432784794/sounds.rss\">rss</a></td>      <td><a href=\"https://soundcloud.com/wisecrackwestworld\">link</a></td>    </tr>    <tr>      <td> </td>      <td>Show Me The Meaning</td>      <td><a href=\"https://showmethemeaning.libsyn.com/rssi\">rss</a></td>      <td><a href=\"https://www.stitcher.com/podcast/wisecrack-inc/show-me-the-meaning-a-wisecrack-movie-podcast\">link</a></td>    </tr>    <tr>      <td> </td>      <td>The Squanch</td>      <td><a href=\"http://squanch.libsyn.com/rss\">rss</a></td>      <td><a href=\"https://soundcloud.com/thesquanch\">link</a></td>    </tr>    <tr>      <td><strong>videogames</strong></td>      <td> </td>      <td> </td>      <td> </td>    </tr>    <tr>      <td> </td>      <td>Electronic Wireless Show</td>      <td><a href=\"https://feeds.soundcloud.com/users/soundcloud%3Ausers%3A116257077/sounds.rss\">rss</a></td>      <td><a href=\"https://soundcloud.com/rockpapershotgun\">link</a></td>    </tr>    <tr>      <td> </td>      <td>Giant Bombcast</td>      <td><a href=\"https://www.giantbomb.com/podcast-xml/giant-bombcastanti\">rss</a></td>      <td><a href=\"https://www.giantbomb.com/podcasts/\">link</a></td>    </tr>    <tr>      <td> </td>      <td>Hello Internet</td>      <td><a href=\"http://www.hellointernet.fm/podcast?format=rss\">rss</a></td>      <td><a href=\"http://www.hellointernet.fm/\">link</a></td>    </tr>    <tr>      <td> </td>      <td>Idle Thumbs</td>      <td><a href=\"https://www.idlethumbs.net/feeds/idle-thumbs\">rss</a></td>      <td><a href=\"https://www.idlethumbs.net/idlethumbs\">link</a></td>    </tr>    <tr>      <td> </td>      <td>The Indoor Kids</td>      <td><a href=\"https://feeds.soundcloud.com/users/soundcloud%3Ausers%3A37793930/sounds.rss\">rss</a></td>      <td><a href=\"https://soundcloud.com/indoorkids\">link</a></td>    </tr>    <tr>      <td> </td>      <td>Roguelike Radio</td>      <td><a href=\"http://feeds.feedburner.com/RoguelikeRadio\">rss</a></td>      <td><a href=\"http://www.roguelikeradio.com/\">link</a></td>    </tr>    <tr>      <td> </td>      <td>Super Joysick Radio</td>      <td><a href=\"https://superjoystickradio.libsyn.com/rss\">rss</a></td>      <td><a href=\"http://superjoystickradio.com/\">link</a></td>    </tr>    <tr>      <td> </td>      <td>Videogames Hot Dog</td>      <td><a href=\"http://shows.kingdomofloathing.com/ahd/videogameshotdog.xml\">rss</a></td>      <td><a href=\"http://videogameshotdog.com/allepisodes.php\">link</a></td>    </tr>    <tr>      <td> </td>      <td>Watch Out For Fireballs</td>      <td><a href=\"http://www.watchoutforfireballs.com/rss\">rss</a></td>      <td><a href=\"http://www.watchoutforfireballs.com/\">link</a></td>    </tr>    <tr>      <td><strong>music</strong></td>      <td> </td>      <td> </td>      <td> </td>    </tr>    <tr>      <td> </td>      <td>Legacy Music Hour</td>      <td><a href=\"http://feeds.feedburner.com/LegacyMusicHour\">rss</a></td>      <td><a href=\"https://soundcloud.com/legacy-music-hour\">link</a></td>    </tr>    <tr>      <td><strong>linux</strong></td>      <td> </td>      <td> </td>      <td> </td>    </tr>    <tr>      <td> </td>      <td>Linux Outlaws</td>      <td><a href=\"http://feeds.feedburner.com/linuxoutlaws\">rss</a></td>      <td><a href=\"http://sixgun.org/linuxoutlaws/\">link</a></td>    </tr>    <tr>      <td><strong>others</strong></td>      <td> </td>      <td> </td>      <td> </td>    </tr>    <tr>      <td> </td>      <td>Advice Hot Dog</td>      <td><a href=\"http://shows.kingdomofloathing.com/ahd/advicehotdog.xmli\">rss</a></td>      <td><a href=\"http://advicehotdog.com/\">link</a></td>    </tr>    <tr>      <td> </td>      <td>Containers</td>      <td><a href=\"http://feeds.feedburner.com/ContainersPodcast\">rss</a></td>      <td><a href=\"https://soundcloud.com/containersfmg\">link</a></td>    </tr>    <tr>      <td> </td>      <td>Rabbits</td>      <td><a href=\"https://rabbits.libsyn.com/rss\">rss</a></td>      <td><a href=\"https://www.rabbitspodcast.com/\">link</a></td>    </tr>    <tr>      <td> </td>      <td>Stuff You Should Know</td>      <td><a href=\"https://feeds.megaphone.fm/stuffyoushouldknow\">rss</a></td>      <td><a href=\"https://player.fm/series/stuff-you-should-know-1659652\">link</a></td>    </tr>    <tr>      <td> </td>      <td>Under The Hood</td>      <td><a href=\"https://underthehoodpod.libsyn.com/rss\">rss</a></td>      <td><a href=\"http://underthehoodpod.libsyn.com/\">link</a></td>    </tr>    <tr>      <td> </td>      <td>Walking Up with Sam Harris</td>      <td><a href=\"https://wakingup.libsyn.com/rss\">rss</a></td>      <td><a href=\"https://www.samharris.org/podcast\">link</a></td>    </tr>    <tr>      <td> </td>      <td>WTF with Marc Maron</td>      <td><a href=\"https://wtfpod.libsyn.com/rss\">rss</a></td>      <td><a href=\"http://www.wtfpod.com/\">link</a></td>    </tr>    <tr>      <td> </td>      <td>You Must Remember This</td>      <td><a href=\"https://feeds.feedburner.com/MustRememberThis\">rss</a></td>      <td><a href=\"http://podbay.fm/show/858124601\">link</a></td>    </tr>    <tr>      <td><strong>finished</strong></td>      <td> </td>      <td> </td>      <td> </td>    </tr>    <tr>      <td> </td>      <td>The Biggest Problem in the Universe</td>      <td><a href=\"https://feeds.soundcloud.com/playlists/soundcloud:playlists:232148533/sounds.rss\">rss</a></td>      <td><a href=\"http://thebiggestproblemintheuniverse.com/\">link</a></td>    </tr>    <tr>      <td> </td>      <td>Game of Thrones von Serienjunkies.de</td>      <td><a href=\"https://sjme.de/sjpodcast/serienjunkies_podcast_itunesfeed_game-of-thrones.xml\">rss</a></td>      <td><a href=\"https://itunes.apple.com/de/podcast/game-of-thrones-podcast/id993110464?l=en&amp;mt=2\">link</a></td>    </tr>  </tbody></table><h2 id=\"android-apps\">Android apps:</h2><table>  <thead>    <tr>      <th>app</th>      <th>gpodder</th>    </tr>  </thead>  <tbody>    <tr>      <td><a href=\"https://play.google.com/store/apps/details?id=com.axelby.podax&amp;hl=en\">podax</a></td>      <td>Subscription sync</td>    </tr>    <tr>      <td><a href=\"https://play.google.com/store/apps/details?id=de.danoeh.antennapod&amp;hl=en\">AntennaPod</a></td>      <td>login but no sync so far</td>    </tr>    <tr>      <td><a href=\"https://play.google.com/store/apps/details?id=org.codepimps.listenup.free\">listen up free</a></td>      <td>login but no sync so far</td>    </tr>    <tr>      <td><a href=\"https://play.google.com/store/apps/details?id=org.bottiger.podcast\">SoundWaves</a></td>      <td> </td>    </tr>    <tr>      <td><a href=\"https://play.google.com/store/apps/details?id=com.sancel.cast.best.podcast.tune.list\">Podcast Tunes</a></td>      <td>sync in progress</td>    </tr>    <tr>      <td><a href=\"https://play.google.com/store/apps/details?id=com.vaikeo.podcastpro\">PodcastBox - Podcast Player</a></td>      <td>only gpodder search, no sync</td>    </tr>    <tr>      <td><a href=\"https://play.google.com/store/apps/details?id=com.silvereon.podcast\">Omni Podcast</a></td>      <td>only search and top podcasts, no sync</td>    </tr>    <tr>      <td><a href=\"https://play.google.com/store/apps/details?id=com.castmic.podcast\">CastMic Podcast Player: Free radio podcatcher</a></td>      <td>sync startet</td>    </tr>    <tr>      <td><a href=\"https://play.google.com/store/apps/details?id=net.alliknow.podcatcher\">Simple Podcatcher</a></td>      <td>start sync</td>    </tr>    <tr>      <td><a href=\"https://play.google.com/store/apps/details?id=com.peaches.jpodcasts&amp;rdid=com.peaches.jpodcasts\">Jpodcasts</a></td>      <td>sync startet</td>    </tr>    <tr>      <td><a href=\"https://play.google.com/store/apps/details?id=com.dragontek.podder\">Podder</a></td>      <td>sync startet</td>    </tr>    <tr>      <td><a href=\"https://play.google.com/store/apps/details?id=com.podcatcher.deluxe&amp;hl=en\">Podcatcher Deluxe</a></td>      <td>2€</td>    </tr>  </tbody></table><h2 id=\"linux-clients\">Linux clients:</h2><ul>  <li><a href=\"https://gpodder.net\">gpodder</a></li></ul><hr /><h2 id=\"others\">Others:</h2><ul>  <li><a href=\"https://wiki.gnome.org/Apps/Rhythmbox\">rhythmbox</a></li></ul>",
                "url": "http://0.0.0.0:4000/podcasts/2018/04/15/podcasts.html",
                
                
                "categories": ["podcasts"],                
                
                "tags": ["movies","shows","videogames","linux","making","music"],
                "date_published": "2018-04-15T00:00:00+02:00",
                "date_modified": "2018-04-15T00:00:00+02:00",
                
                "author":  "Hisfantor" 
                
            },
        
            {
                "title": "bash alias in rofi",
                "content_text": "Dependencies:  rofi  bash shellSetup:first create your bash alias file(~/.bash_aliases):alias | awk -F'[ =]' '{print $2}'alias wpr='~/.config/i3/wp.sh'the first line is for rofi to know how aliases look likethe second line is an example aliasmake sure that your bashrc(~/.bashrc) is looking for your file(.bash_aliases):# Alias definitions.# You may want to put all your additions into a separate file like# ~/.bash_aliases, instead of adding them here directly.# See /usr/share/doc/bash-doc/examples in the bash-doc package.if [ -f ~/.bash_aliases ]; then    . ~/.bash_aliasesfiand last you have to configure your run command like this:rofi -run-list-command \". ~/.bash_aliases\" -run-command \"/bin/bash -i -c '{cmd}'\" -show runI use i3wm so I add in my config(.config/i3/config):bindsym $mod+d exec rofi -run-list-command \". ~/.bash_aliases\" -run-command \"/bin/bash -i -c '{cmd}'\" -show runExplanation:  .bashrc gets the bash aliases via .bash_aliases  rofi knows what aliases are withe the first line in .bash_aliases  the rofi run command is configured too look up .bash_aliases and include them in run",
                "content_html": "<h1 id=\"dependencies\">Dependencies:</h1><ul>  <li>rofi</li>  <li>bash shell</li></ul><h1 id=\"setup\">Setup:</h1><p>first create your bash alias file(~/.bash_aliases):</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>alias | awk -F'[ =]' '{print $2}'alias wpr='~/.config/i3/wp.sh'</code></pre></div></div><p>the first line is for rofi to know how aliases look like</p><p>the second line is an example alias</p><p>make sure that your bashrc(~/.bashrc) is looking for your file(.bash_aliases):</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># Alias definitions.# You may want to put all your additions into a separate file like# ~/.bash_aliases, instead of adding them here directly.# See /usr/share/doc/bash-doc/examples in the bash-doc package.if [ -f ~/.bash_aliases ]; then    . ~/.bash_aliasesfi</code></pre></div></div><p>and last you have to configure your run command like this:</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>rofi -run-list-command \". ~/.bash_aliases\" -run-command \"/bin/bash -i -c '{cmd}'\" -show run</code></pre></div></div><p>I use i3wm so I add in my config(.config/i3/config):</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>bindsym $mod+d exec rofi -run-list-command \". ~/.bash_aliases\" -run-command \"/bin/bash -i -c '{cmd}'\" -show run</code></pre></div></div><h1 id=\"explanation\">Explanation:</h1><ol>  <li>.bashrc gets the bash aliases via .bash_aliases</li>  <li>rofi knows what aliases are withe the first line in .bash_aliases</li>  <li>the rofi run command is configured too look up .bash_aliases and include them in run</li></ol>",
                "url": "http://0.0.0.0:4000/linux/2018/03/22/rofi-n-stuff.html",
                
                
                "categories": ["linux"],                
                
                "tags": ["ubuntu","rofi","bash"],
                "date_published": "2018-03-22T00:00:00+01:00",
                "date_modified": "2018-03-22T00:00:00+01:00",
                
                "author":  "Hisfantor" 
                
            },
        
            {
                "title": "random desktop wallpaper",
                "content_text": "Dependencies:  this github project  feh (sudo apt install feh)  i3wmSetup:first off the settings file of wpr(.config/wallpaper-reddit/wallpaper-reddit.conf):[Options]    subs = earthporn,spaceporn,cyberpunk,digitalpainting,wallpapers,alternativeart    minwidth = 1920    minheight = 1080    maxlinks = 20    resize = True    random = True[Startup]    attempts = 0    interval = 0[Save]    directory = ~/Pictures/Wallpaper-redditnext the script(.config/i3/wpr.sh):#!/bin/bashrm ~/Pictures/Wallpaper-reddit/wallpaper0.jpg      wallpaper-reddit --randomwallpaper-reddit --savefeh --bg-scale /home/hisfantor/Pictures/Wallpaper-reddit/wallpaper0.jpgand implement in i3wm(.config/i3/config):exec_always --no-startup-id ~/.config/i3/wpr.shand just for fun a bash alias(.bash_aliases):alias wpr='~/.config/i3/wpr.sh'Explanation:  startup of wpr is set off because i3 calls it every time it restarts  the script deletes the last image which is called wallpaper0.jpg by wpr  than it downloads the first best image from one of the subs  it saves/downloads the image, which will be wallpaper0.jpg again  feh sets the new image (location is defined in the wpr config)  last i3 just starts the script whenever it starts or reloads($mod+r)  a bash alias if I want to load an other image without reloading i3(consider it needs some seconds to download so don’t spam it, otherwise wpr will download multiple images and name them wallpaper1, wallpaper2, …)",
                "content_html": "<h1 id=\"dependencies\">Dependencies:</h1><ul>  <li><a href=\"https://github.com/markubiak/wallpaper-reddit\">this</a> github project</li>  <li>feh (sudo apt install feh)</li>  <li>i3wm</li></ul><h1 id=\"setup\">Setup:</h1><p>first off the settings file of wpr(.config/wallpaper-reddit/wallpaper-reddit.conf):</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>[Options]    subs = earthporn,spaceporn,cyberpunk,digitalpainting,wallpapers,alternativeart    minwidth = 1920    minheight = 1080    maxlinks = 20    resize = True    random = True[Startup]    attempts = 0    interval = 0[Save]    directory = ~/Pictures/Wallpaper-reddit</code></pre></div></div><p>next the script(.config/i3/wpr.sh):</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">#!/bin/bash</span><span class=\"nb\">rm</span> ~/Pictures/Wallpaper-reddit/wallpaper0.jpg      wallpaper-reddit <span class=\"nt\">--random</span>wallpaper-reddit <span class=\"nt\">--save</span>feh <span class=\"nt\">--bg-scale</span> /home/hisfantor/Pictures/Wallpaper-reddit/wallpaper0.jpg</code></pre></div></div><p>and implement in i3wm(.config/i3/config):</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>exec_always --no-startup-id ~/.config/i3/wpr.sh</code></pre></div></div><p>and just for fun a bash alias(.bash_aliases):</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>alias wpr='~/.config/i3/wpr.sh'</code></pre></div></div><h1 id=\"explanation\">Explanation:</h1><ol>  <li>startup of wpr is set off because i3 calls it every time it restarts</li>  <li>the script deletes the last image which is called wallpaper0.jpg by wpr</li>  <li>than it downloads the first best image from one of the subs</li>  <li>it saves/downloads the image, which will be wallpaper0.jpg again</li>  <li>feh sets the new image (location is defined in the wpr config)</li>  <li>last i3 just starts the script whenever it starts or reloads($mod+r)</li>  <li>a bash alias if I want to load an other image without reloading i3(consider it needs some seconds to download so don’t spam it, otherwise wpr will download multiple images and name them wallpaper1, wallpaper2, …)</li></ol>",
                "url": "http://0.0.0.0:4000/linux/2018/03/17/wpr.html",
                
                
                "categories": ["linux"],                
                
                "tags": ["ubuntu","i3"],
                "date_published": "2018-03-17T00:00:00+01:00",
                "date_modified": "2018-03-17T00:00:00+01:00",
                
                "author":  "Hisfantor" 
                
            }
        
    ],
    "pages": [
            
            {
                "id": "about",
                "title": "About",
                "content_text": "I’m an engineering student from germany.you can find an overview about the stuff I do on Hisfanntor.com.Contact: niclas@hisfantor.com or @hisfantor on most platforms.",
                "content_html": "<p>I’m an engineering student from germany.</p><p>you can find an overview about the stuff I do on <a href=\"Hisfantor.com\">Hisfanntor.com</a>.</p><p>Contact: niclas@hisfantor.com or @hisfantor on most platforms.</p>",
                "url": "http://0.0.0.0:4000/about.html",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "",
                "title": null,
                "content_text": "{    \"website_title\": \"{{ site.title | xml_escape }}\",    \"website_url\": \"{{ \"/\" | absolute_url }}\",    \"posts\": [        {% for post in site.posts %}            {                \"title\": {{ post.title | jsonify }},                \"content_text\": {{ post.content | strip_html | strip_newlines | jsonify }},                \"content_html\": {{ post.content | strip_newlines | jsonify }},                \"url\": \"{{ post.url | absolute_url }}\",                {% if post.image.size > 0 %}                \"image\": {{ post.image | jsonify }},{% endif %}                {% if post.categories.size > 0 %}                \"categories\": {{ post.categories | jsonify }},{% endif %}                                {% if post.tags.size > 0 %}                \"tags\": {{ post.tags | jsonify }},{% endif %}                \"date_published\": \"{{ post.date | date_to_xmlschema }}\",                \"date_modified\": \"{{ post.date | date_to_xmlschema }}\",                {% if post.author %}                \"author\": {% if post.author.name %} \"{{ post.author.name }}\" {% else %} \"{{ post.author }}\" {% endif %}                {% else %}                \"author\": {% if site.author.name %} \"{{ site.author.name }}\" {% else %} \"{{ site.author }}\" {% endif %}                {% endif %}            }{% if forloop.last == false %},{% endif %}        {% endfor %}    ],    \"pages\": [            {% for page in site.pages %}            {                \"id\": {{page.title | downcase | jsonify}},                \"title\": {{ page.title | jsonify }},                \"content_text\": {{ page.content | strip_html | strip_newlines | jsonify }},                \"content_html\": {{ page.content | strip_newlines | jsonify }},                \"url\": \"{{ page.url | absolute_url }}\",                \"date_published\": \"{{ page.date | date_to_xmlschema }}\",                \"date_modified\": \"{{ page.date | date_to_xmlschema }}\"            }{% if forloop.last == false %},{% endif %}        {% endfor %}    ]           }",
                "content_html": "{    \"website_title\": \"{{ site.title | xml_escape }}\",    \"website_url\": \"{{ \"/\" | absolute_url }}\",    \"posts\": [        {% for post in site.posts %}            {                \"title\": {{ post.title | jsonify }},                \"content_text\": {{ post.content | strip_html | strip_newlines | jsonify }},                \"content_html\": {{ post.content | strip_newlines | jsonify }},                \"url\": \"{{ post.url | absolute_url }}\",                {% if post.image.size > 0 %}                \"image\": {{ post.image | jsonify }},{% endif %}                {% if post.categories.size > 0 %}                \"categories\": {{ post.categories | jsonify }},{% endif %}                                {% if post.tags.size > 0 %}                \"tags\": {{ post.tags | jsonify }},{% endif %}                \"date_published\": \"{{ post.date | date_to_xmlschema }}\",                \"date_modified\": \"{{ post.date | date_to_xmlschema }}\",                {% if post.author %}                \"author\": {% if post.author.name %} \"{{ post.author.name }}\" {% else %} \"{{ post.author }}\" {% endif %}                {% else %}                \"author\": {% if site.author.name %} \"{{ site.author.name }}\" {% else %} \"{{ site.author }}\" {% endif %}                {% endif %}            }{% if forloop.last == false %},{% endif %}        {% endfor %}    ],    \"pages\": [            {% for page in site.pages %}            {                \"id\": {{page.title | downcase | jsonify}},                \"title\": {{ page.title | jsonify }},                \"content_text\": {{ page.content | strip_html | strip_newlines | jsonify }},                \"content_html\": {{ page.content | strip_newlines | jsonify }},                \"url\": \"{{ page.url | absolute_url }}\",                \"date_published\": \"{{ page.date | date_to_xmlschema }}\",                \"date_modified\": \"{{ page.date | date_to_xmlschema }}\"            }{% if forloop.last == false %},{% endif %}        {% endfor %}    ]           }",
                "url": "http://0.0.0.0:4000/api.json",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "blog",
                "title": "Blog",
                "content_text": "{% for post in site.posts %}{{post.title}}{%endfor%}",
                "content_html": "{% for post in site.posts %}<a href=\"{{site.baseurl}}{{post.url}}\">{{post.title}}</a>{%endfor%}",
                "url": "http://0.0.0.0:4000/",
                "date_published": "",
                "date_modified": ""
            }
        
    ]           
}